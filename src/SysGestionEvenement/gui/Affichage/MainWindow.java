/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SysGestionEvenement.gui.Affichage;
import SysGestionEvenement.Controlleur.PlanControlleur;
import SysGestionEvenement.Domaine.Plan.EspaceVital;
import SysGestionEvenement.Domaine.Plan.Evenement;
import SysGestionEvenement.Domaine.Plan.Range;
import SysGestionEvenement.Domaine.Plan.SectionIrreguliere;
import SysGestionEvenement.Domaine.Plan.SectionRectangulaire;
import SysGestionEvenement.Domaine.Plan.Siege;
import SysGestionEvenement.Domaine.PrixOffre.Offre;
import SysGestionEvenement.Domaine.PrixOffre.Prix;
import SysGestionEvenement.Domaine.Utilitaires.Conversion;
import SysGestionEvenement.Domaine.Utilitaires.ModeApplication;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.FlowLayout;
import java.awt.Polygon;
import java.io.File;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
/**
 *
 * @author alemyre
 */
public class MainWindow extends javax.swing.JFrame {
    
    private ListOfGuiColor listeGuiColor;
    private GuiColorPanel guiColorPanel;
    private ListOffreAfficher listeOffre;
    //private OffreAfficherPanel monOffre;
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
      //Toolkit kit = Toolkit.getDefaultToolkit();
      //Dimension screenSize = kit.getScreenSize();
      //int screenHeight = screenSize.height;
      //int screenWidth = screenSize.width;
      
      // Set frame width, height and let plaftorm pick screen location
      //setSize(screenWidth/2, screenHeight/2);
      //setLocationByPlatform(true);
        initComponents(); 
        monInfoEvents = new Evenement();
        this.controlleur = new PlanControlleur();
        this.listeGuiColor = new ListOfGuiColor();
        this.guiColorPanel = new GuiColorPanel();
        this.listeOffre = new ListOffreAfficher();
        //this.monOffre = new OffreAfficherPanel();
        //planDeSalle = new PlanDeSalle();
    }
    
    public PlanControlleur controlleur;
    public Point actualMousePoint = new Point();
    public Point delta = new Point();
    public int nbColonnesSection;
    public int nbRangeSection;
    public int elevationSection;
    public int anglesection;
    public int angleScene;
    public Point coinGaucheSection;
    public String nomSection;
    //public int indiceSection=1;
    public int largeurEspaceDefaut;
    public int profondeurEspaceDefaut;
    public boolean dessiner =true;
    private boolean dessiner2 = true;
    public ArrayList<Integer> espaceVitalParDefaut = new ArrayList<>();
    public ArrayList <String> monTableu = new ArrayList<>();    
    public Point p_point;
    public Point p_end;
    private int incrementZome = 0;
    public Polygon poly=new Polygon();
    public int nbClic=0;
    Point pointDebut=new Point();
    public Point p_supDroit;
    public Point p_infGauche;
    /**
     * L'objet ModeApplication est un enum qui nous permet de choisir un mode
     * courant pour notre application
     */
    public ModeApplication modeCourant;
    
    public void setModeApplication(ModeApplication nouveauMode)
    {
        this.modeCourant = nouveauMode;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fileChooser = new javax.swing.JFileChooser();
        dialogueCreationPlanSalle = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        annulerCreerPlanSalle = new javax.swing.JButton();
        creerPlanSalleButton = new javax.swing.JButton();
        nomEventInfo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lieuEventInfo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dateEventInfo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        longueurNewPlanDeSalle = new javax.swing.JFormattedTextField();
        largeurNewPlanDeSalle = new javax.swing.JFormattedTextField();
        longueurEspaceVital = new javax.swing.JFormattedTextField();
        largeurEspaceVital = new javax.swing.JFormattedTextField();
        capaciteEventInfo = new javax.swing.JTextField();
        buttonGroupTopMenu = new javax.swing.ButtonGroup();
        diaglogueAjoutSectionRect = new javax.swing.JDialog();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldNbRangee = new javax.swing.JTextField();
        jTextFieldNbColonnes = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldElevation = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        nomDeSection = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        longueurEspVitalDefaut = new javax.swing.JFormattedTextField();
        jLabel41 = new javax.swing.JLabel();
        largeurEspVitalDefaut = new javax.swing.JFormattedTextField();
        jLabel42 = new javax.swing.JLabel();
        distAutoSieges = new javax.swing.JCheckBox();
        jLabel53 = new javax.swing.JLabel();
        jTextFieldAngle = new javax.swing.JTextField();
        dialogueModifierPlanDeSalle = new javax.swing.JDialog();
        jSeparator3 = new javax.swing.JSeparator();
        titreModif = new javax.swing.JLabel();
        titreNouvInfo = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        longueurFormated = new javax.swing.JFormattedTextField();
        largeurFormatted = new javax.swing.JFormattedTextField();
        annulerModifierButton = new javax.swing.JButton();
        confirmerModifierButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        longueurEspVitalFormatted = new javax.swing.JTextField();
        largeurEspVitalFormatted = new javax.swing.JTextField();
        dialogueInfoEvenement = new javax.swing.JDialog();
        jSeparator4 = new javax.swing.JSeparator();
        nomEvenement = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        fermerEventButton = new javax.swing.JButton();
        nomEvent = new javax.swing.JTextField();
        dateEvent = new javax.swing.JTextField();
        capaciteEvent = new javax.swing.JTextField();
        lieuEvent = new javax.swing.JTextField();
        planDeSalle = new javax.swing.JPanel();
        dialogueAjouterPrix = new javax.swing.JDialog();
        jLabel27 = new javax.swing.JLabel();
        jTextFieldPrixBillet = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jButtonAnnulerCreerPrix = new javax.swing.JButton();
        jButtonAcceptCreationPrix = new javax.swing.JButton();
        jPanelColorChoose = new javax.swing.JPanel();
        dialogueCalculerPrixAuto = new javax.swing.JDialog();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldPrixMinimumBillet = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextFieldPrixMaximumBillet = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabelRevenueTotal = new javax.swing.JLabel();
        jButtonAppliquerCreationPrixAuto = new javax.swing.JButton();
        jPanelAnnulerAccepter = new javax.swing.JPanel();
        jButtonAccepterPrixAuto = new javax.swing.JButton();
        jButtonAnnulerPrixAuto = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jComboBoxAttribution = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        dialogueModifierScene = new javax.swing.JDialog();
        jLabelLongueurModifierScene = new javax.swing.JLabel();
        jTextFieldModfierSceneLongueur = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jTextFieldModfierSceneLargeur1 = new javax.swing.JTextField();
        jButtonAccepterModifierScene = new javax.swing.JButton();
        jButtonAnnulerModifierScene = new javax.swing.JButton();
        dialogueModifSectionRect = new javax.swing.JDialog();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jTextFieldNbRangeeModif = new javax.swing.JTextField();
        jTextFieldNbColonnesModif = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jTextFieldAngleModif = new javax.swing.JTextField();
        jButtonAnnulerMofifSectionRect = new javax.swing.JButton();
        jButtonModfierSectionRect = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        nomDeSectionModif = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        longueurEspVitalDefautModif = new javax.swing.JFormattedTextField();
        jLabel50 = new javax.swing.JLabel();
        largeurEspVitalDefautModif = new javax.swing.JFormattedTextField();
        jLabel51 = new javax.swing.JLabel();
        distAutoSiegesModif = new javax.swing.JCheckBox();
        jTextFieldElevationModif = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        dialogueAjouterOffre = new javax.swing.JDialog();
        jLabel54 = new javax.swing.JLabel();
        pourcentageAjoutOffre = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        annulerAjoutOffre = new javax.swing.JButton();
        accepterAjoutOffre = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        descriptionAjoutOffre = new javax.swing.JTextField();
        afficherInfoSiege = new javax.swing.JDialog();
        aff_infoSiege = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        affNumSiege = new javax.swing.JTextField();
        affNomSection = new javax.swing.JTextField();
        affPrixAss = new javax.swing.JTextField();
        affElevation = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        affNumRangee = new javax.swing.JTextArea();
        dialogueInfoOffreSiege = new javax.swing.JDialog();
        jLabel63 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        siegeDescOffre = new javax.swing.JTextField();
        siegePourOffre = new javax.swing.JTextField();
        siegeQuanOffre = new javax.swing.JTextField();
        mainPanel = new javax.swing.JPanel();
        buttonTopPanel = new javax.swing.JPanel(new FlowLayout(FlowLayout.LEFT));
        buttonTopPanelOpen = new javax.swing.JButton();
        buttonTopPanelSave = new javax.swing.JButton();
        buttonTopPanelAnnuler = new javax.swing.JButton();
        buttonTopPanelRepeter = new javax.swing.JButton();
        buttonTopPanelZoomIn = new javax.swing.JToggleButton();
        buttonTopPanelZoomOut = new javax.swing.JToggleButton();
        buttonTopPanelDeplacer = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jComboBoxSelection = new javax.swing.JComboBox<>();
        buttonTopPanelDessiner = new javax.swing.JToggleButton();
        buttonTopPanelDessinerReg = new javax.swing.JToggleButton();
        buttonTopPanelDessinerScene = new javax.swing.JToggleButton();
        buttonTopPanelModifierScene = new javax.swing.JToggleButton();
        buttonTopPanelRotationScene = new javax.swing.JToggleButton();
        buttonTopPanelSupprimer = new javax.swing.JToggleButton();
        checkBoxActiverGrille = new javax.swing.JCheckBox();
        menuPalettePosition = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jButton1SiegeManuel = new javax.swing.JButton();
        jButtonSectionGenerale = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jScrollPanePrix = new javax.swing.JScrollPane();
        jPanelPrix = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButtonAjoutPrix = new javax.swing.JButton();
        jButtonSupprimerPrix = new javax.swing.JButton();
        jPanelSelectionPrixAuto = new javax.swing.JPanel();
        jButtonCreerPrixAuto = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        creerOffre = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jScrollPaneOffre = new javax.swing.JScrollPane();
        jPanelOffre = new javax.swing.JPanel();
        creerButton = new javax.swing.JButton();
        drawingPanel = new SysGestionEvenement.gui.Dessin.DrawingPanel(this);
        topMenuBar = new javax.swing.JMenuBar();
        fichierMenu = new javax.swing.JMenu();
        fichierSousMenuNouveau = new javax.swing.JMenuItem();
        fichierSousMenuOuvrir = new javax.swing.JMenuItem();
        fichierSousMenuSauvegarder = new javax.swing.JMenuItem();
        fichierSousMenuExporter = new javax.swing.JMenuItem();
        fichierSousMenuQuitter = new javax.swing.JMenuItem();
        editionMenu = new javax.swing.JMenu();
        editionMenuCouper = new javax.swing.JMenuItem();
        editionMenuCopier = new javax.swing.JMenuItem();
        editionMenuColler = new javax.swing.JMenuItem();
        editionMenuAnnuler = new javax.swing.JMenuItem();
        editionMenuRepeter = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        presentationMenu = new javax.swing.JMenu();
        presentationSousMenuSection = new javax.swing.JMenuItem();
        presentationSousMenuPosition = new javax.swing.JMenuItem();
        presentationSousMenuPrix = new javax.swing.JMenuItem();
        presentationSousMenuOffre = new javax.swing.JMenuItem();
        presentationSousMenuInfo = new javax.swing.JMenuItem();

        fileChooser.setName("Ouvrir un fichier Plan"); // NOI18N

        dialogueCreationPlanSalle.setTitle("Nouveau plan de salle");
        dialogueCreationPlanSalle.setBackground(new java.awt.Color(150, 150, 150));
        dialogueCreationPlanSalle.setSize(new java.awt.Dimension(500, 600));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Dimensions salle");

        jLabel2.setText("Longueur (en m) :");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Espace vital");

        jLabel5.setText("Largeur (en m) :");

        annulerCreerPlanSalle.setText("Annuler");
        annulerCreerPlanSalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerCreerPlanSalleActionPerformed(evt);
            }
        });

        creerPlanSalleButton.setText("Créer Plan");
        creerPlanSalleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerPlanSalleButtonActionPerformed(evt);
            }
        });

        nomEventInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomEventInfoActionPerformed(evt);
            }
        });

        jLabel7.setText("Nom :");

        jLabel8.setText("Lieu :");

        lieuEventInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lieuEventInfoActionPerformed(evt);
            }
        });

        jLabel9.setText("Date :");

        dateEventInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateEventInfoActionPerformed(evt);
            }
        });

        jLabel10.setText("Capacité :");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setText("Évènement");

        jLabel12.setText("Longueur (en m) :");

        jLabel13.setText("Largueur (en m) :");

        javax.swing.GroupLayout dialogueCreationPlanSalleLayout = new javax.swing.GroupLayout(dialogueCreationPlanSalle.getContentPane());
        dialogueCreationPlanSalle.getContentPane().setLayout(dialogueCreationPlanSalleLayout);
        dialogueCreationPlanSalleLayout.setHorizontalGroup(
            dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                        .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(longueurNewPlanDeSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5))
                            .addComponent(jLabel4)
                            .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                                .addGap(435, 435, 435)
                                .addComponent(annulerCreerPlanSalle)
                                .addGap(18, 18, 18)
                                .addComponent(creerPlanSalleButton))
                            .addComponent(jLabel12))
                        .addContainerGap(58, Short.MAX_VALUE))
                    .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                        .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueCreationPlanSalleLayout.createSequentialGroup()
                        .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dateEventInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                    .addComponent(nomEventInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                    .addComponent(capaciteEventInfo))
                                .addGap(54, 54, 54)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lieuEventInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(largeurNewPlanDeSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                                        .addComponent(longueurEspaceVital, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(largeurEspaceVital, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(44, 44, 44))))
        );
        dialogueCreationPlanSalleLayout.setVerticalGroup(
            dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(longueurNewPlanDeSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(largeurNewPlanDeSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(longueurEspaceVital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(largeurEspaceVital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7)
                        .addGap(22, 22, 22)
                        .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(capaciteEventInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel9)))
                    .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(lieuEventInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogueCreationPlanSalleLayout.createSequentialGroup()
                        .addComponent(nomEventInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dateEventInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(dialogueCreationPlanSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annulerCreerPlanSalle)
                    .addComponent(creerPlanSalleButton))
                .addGap(22, 22, 22))
        );

        dialogueCreationPlanSalle.getAccessibleContext().setAccessibleParent(null);

        diaglogueAjoutSectionRect.setTitle("Ajouter Section Rectangulaire");

        jLabel18.setText("Nombre de colonnes :");

        jLabel19.setText("Nombre de rangées :");

        jTextFieldNbRangee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNbRangeeActionPerformed(evt);
            }
        });

        jTextFieldNbColonnes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNbColonnesActionPerformed(evt);
            }
        });

        jLabel20.setText("Élévation :");

        jTextFieldElevation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldElevationActionPerformed(evt);
            }
        });

        jButton2.setText("Annuler");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Créer Section");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel38.setText("Nom de la section :");

        jLabel39.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel39.setText("Espace Vital (par defaut)");

        jLabel40.setText("Longueur (en m) :");

        jLabel41.setText("Largeur (en m) :");

        jLabel42.setText("Distribution  sieges");

        distAutoSieges.setSelected(true);

        jLabel53.setText("Angle :");

        jTextFieldAngle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAngleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diaglogueAjoutSectionRectLayout = new javax.swing.GroupLayout(diaglogueAjoutSectionRect.getContentPane());
        diaglogueAjoutSectionRect.getContentPane().setLayout(diaglogueAjoutSectionRectLayout);
        diaglogueAjoutSectionRectLayout.setHorizontalGroup(
            diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(nomDeSection, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel42)
                        .addGap(18, 18, 18)
                        .addComponent(distAutoSieges)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                                .addComponent(jLabel53)
                                .addGap(112, 112, 112)
                                .addComponent(jTextFieldAngle, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldElevation, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldNbColonnes, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldNbRangee, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diaglogueAjoutSectionRectLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(30, 30, 30)
                .addComponent(jButton4)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diaglogueAjoutSectionRectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addGap(51, 51, 51)
                                .addComponent(longueurEspVitalDefaut, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jLabel41)
                                .addGap(18, 18, 18)
                                .addComponent(largeurEspVitalDefaut)
                                .addGap(6, 6, 6))
                            .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 465, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator7))
                .addContainerGap())
        );
        diaglogueAjoutSectionRectLayout.setVerticalGroup(
            diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diaglogueAjoutSectionRectLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(nomDeSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42)
                    .addComponent(distAutoSieges))
                .addGap(30, 30, 30)
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextFieldNbColonnes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jTextFieldNbRangee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextFieldElevation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(jTextFieldAngle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addGap(18, 18, 18)
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(longueurEspVitalDefaut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41)
                    .addComponent(largeurEspVitalDefaut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(diaglogueAjoutSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(26, 26, 26))
        );

        dialogueModifierPlanDeSalle.setTitle("Modifier dimension plan de salle");

        titreModif.setText("Voulez-vous editer le plan de salle ?");

        titreNouvInfo.setText("Entrer les nouvelles dimensions de la salle");

        jLabel21.setText("Longueur (en m)");

        jLabel22.setText("Largeur (en m)");

        annulerModifierButton.setText("Annuler");
        annulerModifierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerModifierButtonActionPerformed(evt);
            }
        });

        confirmerModifierButton.setText("Modifier");
        confirmerModifierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmerModifierButtonActionPerformed(evt);
            }
        });

        jSeparator6.setBackground(java.awt.Color.blue);

        jLabel34.setText("Entrer les nouvelles de l'espace vital");

        jLabel36.setText("Longueur (en m)");

        jLabel37.setText("Largeur (en m)");

        javax.swing.GroupLayout dialogueModifierPlanDeSalleLayout = new javax.swing.GroupLayout(dialogueModifierPlanDeSalle.getContentPane());
        dialogueModifierPlanDeSalle.getContentPane().setLayout(dialogueModifierPlanDeSalleLayout);
        dialogueModifierPlanDeSalleLayout.setHorizontalGroup(
            dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(titreModif)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(titreNouvInfo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                        .addGroup(dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator6)
                            .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(longueurFormated, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(largeurFormatted, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel34)
                                    .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                                        .addComponent(jLabel36)
                                        .addGap(18, 18, 18)
                                        .addComponent(longueurEspVitalFormatted, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(jLabel37)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(largeurEspVitalFormatted)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(annulerModifierButton)
                .addGap(18, 18, 18)
                .addComponent(confirmerModifierButton)
                .addGap(182, 182, 182))
        );
        dialogueModifierPlanDeSalleLayout.setVerticalGroup(
            dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titreModif)
                .addGap(17, 17, 17)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(titreNouvInfo)
                .addGap(28, 28, 28)
                .addGroup(dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(longueurFormated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(largeurFormatted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel34)
                .addGroup(dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(jLabel37)
                            .addComponent(longueurEspVitalFormatted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(largeurEspVitalFormatted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueModifierPlanDeSalleLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(dialogueModifierPlanDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(annulerModifierButton)
                            .addComponent(confirmerModifierButton))
                        .addGap(31, 31, 31))))
        );

        dialogueInfoEvenement.setTitle("Information sur l'evenement");

        nomEvenement.setText("Evenement");

        jLabel23.setText("Nom :");

        jLabel24.setText("Date :");

        jLabel25.setText("Capacite :");

        jLabel26.setText("Lieu :");

        fermerEventButton.setText("Fermer");
        fermerEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerEventButtonActionPerformed(evt);
            }
        });

        nomEvent.setEditable(false);

        dateEvent.setEditable(false);

        capaciteEvent.setEditable(false);

        lieuEvent.setEditable(false);

        javax.swing.GroupLayout dialogueInfoEvenementLayout = new javax.swing.GroupLayout(dialogueInfoEvenement.getContentPane());
        dialogueInfoEvenement.getContentPane().setLayout(dialogueInfoEvenementLayout);
        dialogueInfoEvenementLayout.setHorizontalGroup(
            dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                                .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel25))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                        .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(nomEvenement))
                            .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel26))
                                .addGap(101, 101, 101)
                                .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(capaciteEvent)
                                    .addComponent(dateEvent)
                                    .addComponent(nomEvent)
                                    .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                                        .addComponent(lieuEvent, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                        .addGap(3, 3, 3)))))
                        .addGap(0, 70, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueInfoEvenementLayout.createSequentialGroup()
                .addContainerGap(258, Short.MAX_VALUE)
                .addComponent(fermerEventButton)
                .addGap(85, 85, 85))
        );
        dialogueInfoEvenementLayout.setVerticalGroup(
            dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dialogueInfoEvenementLayout.createSequentialGroup()
                        .addComponent(nomEvenement)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(nomEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(dateEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(dialogueInfoEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(capaciteEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel26))
                    .addComponent(lieuEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(fermerEventButton)
                .addContainerGap())
        );

        planDeSalle.setBackground(java.awt.Color.white);
        planDeSalle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        planDeSalle.setToolTipText("Dessiner ici svp! Merci");
        planDeSalle.setPreferredSize(new java.awt.Dimension(400, 400));

        javax.swing.GroupLayout planDeSalleLayout = new javax.swing.GroupLayout(planDeSalle);
        planDeSalle.setLayout(planDeSalleLayout);
        planDeSalleLayout.setHorizontalGroup(
            planDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
        );
        planDeSalleLayout.setVerticalGroup(
            planDeSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 411, Short.MAX_VALUE)
        );

        dialogueAjouterPrix.setTitle("Créer Nouveau prix");

        jLabel27.setText("Prix :");

        jTextFieldPrixBillet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrixBilletActionPerformed(evt);
            }
        });

        jLabel28.setText("Couleur :");

        jButtonAnnulerCreerPrix.setText("Annuler");
        jButtonAnnulerCreerPrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerCreerPrixActionPerformed(evt);
            }
        });

        jButtonAcceptCreationPrix.setText("Accepter");
        jButtonAcceptCreationPrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptCreationPrixActionPerformed(evt);
            }
        });

        jPanelColorChoose.setBackground(new java.awt.Color(255, 255, 255));
        jPanelColorChoose.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelColorChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelColorChooseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelColorChooseLayout = new javax.swing.GroupLayout(jPanelColorChoose);
        jPanelColorChoose.setLayout(jPanelColorChooseLayout);
        jPanelColorChooseLayout.setHorizontalGroup(
            jPanelColorChooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );
        jPanelColorChooseLayout.setVerticalGroup(
            jPanelColorChooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dialogueAjouterPrixLayout = new javax.swing.GroupLayout(dialogueAjouterPrix.getContentPane());
        dialogueAjouterPrix.getContentPane().setLayout(dialogueAjouterPrixLayout);
        dialogueAjouterPrixLayout.setHorizontalGroup(
            dialogueAjouterPrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueAjouterPrixLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAnnulerCreerPrix)
                .addGap(18, 18, 18)
                .addComponent(jButtonAcceptCreationPrix)
                .addGap(35, 35, 35))
            .addGroup(dialogueAjouterPrixLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(dialogueAjouterPrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueAjouterPrixLayout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelColorChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogueAjouterPrixLayout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPrixBillet, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        dialogueAjouterPrixLayout.setVerticalGroup(
            dialogueAjouterPrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueAjouterPrixLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(dialogueAjouterPrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextFieldPrixBillet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(dialogueAjouterPrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueAjouterPrixLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel28))
                    .addGroup(dialogueAjouterPrixLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanelColorChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(dialogueAjouterPrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnnulerCreerPrix)
                    .addComponent(jButtonAcceptCreationPrix))
                .addGap(41, 41, 41))
        );

        dialogueCalculerPrixAuto.setTitle("Calculer Automatique des prix");

        jLabel31.setText("Prix minimum billet");

        jTextFieldPrixMinimumBillet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrixMinimumBilletActionPerformed(evt);
            }
        });

        jLabel32.setText("Revenue total");

        jTextFieldPrixMaximumBillet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrixMaximumBilletActionPerformed(evt);
            }
        });

        jLabel33.setText("Prix maximum billet");

        jLabelRevenueTotal.setText("Total");

        jButtonAppliquerCreationPrixAuto.setText("Appliquer");
        jButtonAppliquerCreationPrixAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAppliquerCreationPrixAutoActionPerformed(evt);
            }
        });

        jButtonAccepterPrixAuto.setText("Accepter");
        jButtonAccepterPrixAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccepterPrixAutoActionPerformed(evt);
            }
        });

        jButtonAnnulerPrixAuto.setText("Annuler");
        jButtonAnnulerPrixAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerPrixAutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAnnulerAccepterLayout = new javax.swing.GroupLayout(jPanelAnnulerAccepter);
        jPanelAnnulerAccepter.setLayout(jPanelAnnulerAccepterLayout);
        jPanelAnnulerAccepterLayout.setHorizontalGroup(
            jPanelAnnulerAccepterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAnnulerAccepterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAnnulerPrixAuto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAccepterPrixAuto)
                .addGap(21, 21, 21))
        );
        jPanelAnnulerAccepterLayout.setVerticalGroup(
            jPanelAnnulerAccepterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAnnulerAccepterLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelAnnulerAccepterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAccepterPrixAuto)
                    .addComponent(jButtonAnnulerPrixAuto))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jComboBoxAttribution.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Par Siège", "Par Rangé", "Par Section" }));
        jComboBoxAttribution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAttributionActionPerformed(evt);
            }
        });

        jLabel35.setText("Attribution par :");

        javax.swing.GroupLayout dialogueCalculerPrixAutoLayout = new javax.swing.GroupLayout(dialogueCalculerPrixAuto.getContentPane());
        dialogueCalculerPrixAuto.getContentPane().setLayout(dialogueCalculerPrixAutoLayout);
        dialogueCalculerPrixAutoLayout.setHorizontalGroup(
            dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelAnnulerAccepter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dialogueCalculerPrixAutoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueCalculerPrixAutoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAppliquerCreationPrixAuto)
                    .addComponent(jLabel31)
                    .addGroup(dialogueCalculerPrixAutoLayout.createSequentialGroup()
                        .addGroup(dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel35))
                        .addGap(18, 18, 18)
                        .addGroup(dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPrixMaximumBillet, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPrixMinimumBillet, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxAttribution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dialogueCalculerPrixAutoLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(68, 68, 68)
                        .addComponent(jLabelRevenueTotal)))
                .addGap(48, 48, 48))
        );
        dialogueCalculerPrixAutoLayout.setVerticalGroup(
            dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueCalculerPrixAutoLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jTextFieldPrixMinimumBillet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrixMaximumBillet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAttribution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addGap(27, 27, 27)
                .addGroup(dialogueCalculerPrixAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabelRevenueTotal))
                .addGap(18, 18, 18)
                .addComponent(jButtonAppliquerCreationPrixAuto)
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAnnulerAccepter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        dialogueModifierScene.setTitle("Modifier Scène");

        jLabelLongueurModifierScene.setText("Longueur");

        jTextFieldModfierSceneLongueur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModfierSceneLongueurActionPerformed(evt);
            }
        });

        jLabel44.setText("Largeur");

        jTextFieldModfierSceneLargeur1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModfierSceneLargeur1ActionPerformed(evt);
            }
        });

        jButtonAccepterModifierScene.setText("Accepter");
        jButtonAccepterModifierScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccepterModifierSceneActionPerformed(evt);
            }
        });

        jButtonAnnulerModifierScene.setText("Annuler");
        jButtonAnnulerModifierScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerModifierSceneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogueModifierSceneLayout = new javax.swing.GroupLayout(dialogueModifierScene.getContentPane());
        dialogueModifierScene.getContentPane().setLayout(dialogueModifierSceneLayout);
        dialogueModifierSceneLayout.setHorizontalGroup(
            dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueModifierSceneLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dialogueModifierSceneLayout.createSequentialGroup()
                        .addComponent(jButtonAnnulerModifierScene)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonAccepterModifierScene))
                    .addGroup(dialogueModifierSceneLayout.createSequentialGroup()
                        .addGroup(dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelLongueurModifierScene)
                            .addComponent(jLabel44))
                        .addGap(27, 27, 27)
                        .addGroup(dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldModfierSceneLargeur1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldModfierSceneLongueur, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(55, 55, 55))
        );
        dialogueModifierSceneLayout.setVerticalGroup(
            dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueModifierSceneLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLongueurModifierScene)
                    .addComponent(jTextFieldModfierSceneLongueur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(jTextFieldModfierSceneLargeur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(dialogueModifierSceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAccepterModifierScene)
                    .addComponent(jButtonAnnulerModifierScene))
                .addGap(40, 40, 40))
        );

        dialogueModifSectionRect.setTitle("Modifier Section Rectangulaire");

        jLabel43.setText("Nombre de colonnes :");

        jLabel45.setText("Nombre de rangées :");

        jTextFieldNbRangeeModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNbRangeeModifActionPerformed(evt);
            }
        });

        jTextFieldNbColonnesModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNbColonnesModifActionPerformed(evt);
            }
        });

        jLabel46.setText("Angle :");

        jTextFieldAngleModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAngleModifActionPerformed(evt);
            }
        });

        jButtonAnnulerMofifSectionRect.setText("Annuler");
        jButtonAnnulerMofifSectionRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerMofifSectionRectActionPerformed(evt);
            }
        });

        jButtonModfierSectionRect.setText("Modifier Section");
        jButtonModfierSectionRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModfierSectionRectActionPerformed(evt);
            }
        });

        jLabel47.setText("Nom de la section :");

        jLabel48.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel48.setText("Espace Vital (par defaut)");

        jLabel49.setText("Longueur (en m) :");

        jLabel50.setText("Largeur (en m) :");

        jLabel51.setText("Distribution  sieges");

        distAutoSiegesModif.setSelected(true);

        jTextFieldElevationModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldElevationModifActionPerformed(evt);
            }
        });

        jLabel52.setText("Élévation :");

        javax.swing.GroupLayout dialogueModifSectionRectLayout = new javax.swing.GroupLayout(dialogueModifSectionRect.getContentPane());
        dialogueModifSectionRect.getContentPane().setLayout(dialogueModifSectionRectLayout);
        dialogueModifSectionRectLayout.setHorizontalGroup(
            dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueModifSectionRectLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAnnulerMofifSectionRect)
                .addGap(30, 30, 30)
                .addComponent(jButtonModfierSectionRect)
                .addGap(25, 25, 25))
            .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator8)
                    .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addGap(51, 51, 51)
                        .addComponent(longueurEspVitalDefautModif, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel50)
                        .addGap(18, 18, 18)
                        .addComponent(largeurEspVitalDefautModif))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogueModifSectionRectLayout.createSequentialGroup()
                        .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47)
                                    .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                                        .addComponent(jLabel43)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldNbColonnesModif, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                                        .addComponent(jLabel46)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextFieldAngleModif, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                                        .addComponent(jLabel52)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextFieldElevationModif, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                                        .addGap(162, 162, 162)
                                        .addComponent(nomDeSectionModif, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel51))
                                    .addComponent(jLabel48))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(distAutoSiegesModif)
                            .addComponent(jTextFieldNbRangeeModif, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        dialogueModifSectionRectLayout.setVerticalGroup(
            dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueModifSectionRectLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(distAutoSiegesModif)
                    .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel47)
                        .addComponent(nomDeSectionModif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel51)))
                .addGap(30, 30, 30)
                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jTextFieldNbColonnesModif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(jTextFieldNbRangeeModif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(jTextFieldElevationModif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(jTextFieldAngleModif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel48)
                .addGap(18, 18, 18)
                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(longueurEspVitalDefautModif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50)
                    .addComponent(largeurEspVitalDefautModif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(dialogueModifSectionRectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnnulerMofifSectionRect)
                    .addComponent(jButtonModfierSectionRect))
                .addGap(26, 26, 26))
        );

        dialogueAjouterOffre.setTitle("Ajout Offre dans palette");

        jLabel54.setText("Rabais (en %) :");

        jLabel55.setText("Description :");

        annulerAjoutOffre.setText("Annuler");
        annulerAjoutOffre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerAjoutOffreActionPerformed(evt);
            }
        });

        accepterAjoutOffre.setText("Accepter");
        accepterAjoutOffre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accepterAjoutOffreMouseClicked(evt);
            }
        });

        jLabel56.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        jLabel56.setText("( entrer nombre uniquement )");

        jLabel57.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel57.setText("Creation des offres");

        javax.swing.GroupLayout dialogueAjouterOffreLayout = new javax.swing.GroupLayout(dialogueAjouterOffre.getContentPane());
        dialogueAjouterOffre.getContentPane().setLayout(dialogueAjouterOffreLayout);
        dialogueAjouterOffreLayout.setHorizontalGroup(
            dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueAjouterOffreLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57)
                    .addGroup(dialogueAjouterOffreLayout.createSequentialGroup()
                        .addGroup(dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel54)
                            .addComponent(jLabel55))
                        .addGap(108, 108, 108)
                        .addGroup(dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(descriptionAjoutOffre)
                            .addComponent(pourcentageAjoutOffre)
                            .addGroup(dialogueAjouterOffreLayout.createSequentialGroup()
                                .addComponent(annulerAjoutOffre)
                                .addGap(18, 18, 18)
                                .addComponent(accepterAjoutOffre)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        dialogueAjouterOffreLayout.setVerticalGroup(
            dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueAjouterOffreLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(pourcentageAjoutOffre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel56)
                .addGap(13, 13, 13)
                .addGroup(dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel55)
                    .addGroup(dialogueAjouterOffreLayout.createSequentialGroup()
                        .addComponent(descriptionAjoutOffre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(dialogueAjouterOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(annulerAjoutOffre)
                            .addComponent(accepterAjoutOffre))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        aff_infoSiege.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        aff_infoSiege.setText("Information sur le siege");

        jLabel59.setText("Numero du siege :");

        jLabel60.setText("Nom de la section :");

        jLabel61.setText("Prix associe :");

        jLabel62.setText("Elevation :");

        jLabel64.setText("Offre(s) :");

        affNumSiege.setEditable(false);

        affNomSection.setEditable(false);

        affPrixAss.setEditable(false);
        affPrixAss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affPrixAssActionPerformed(evt);
            }
        });

        affElevation.setEditable(false);

        affNumRangee.setEditable(false);
        affNumRangee.setColumns(20);
        affNumRangee.setRows(5);
        jScrollPane2.setViewportView(affNumRangee);

        javax.swing.GroupLayout afficherInfoSiegeLayout = new javax.swing.GroupLayout(afficherInfoSiege.getContentPane());
        afficherInfoSiege.getContentPane().setLayout(afficherInfoSiegeLayout);
        afficherInfoSiegeLayout.setHorizontalGroup(
            afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                                .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel62)
                                    .addComponent(jLabel61))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel59)
                            .addComponent(jLabel60))
                        .addGap(44, 44, 44)
                        .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(affElevation)
                            .addComponent(affPrixAss)
                            .addComponent(affNomSection)
                            .addComponent(affNumSiege)))
                    .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(aff_infoSiege)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel64)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        afficherInfoSiegeLayout.setVerticalGroup(
            afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                        .addComponent(aff_infoSiege)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel59)
                            .addComponent(affNumSiege, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel60)
                            .addComponent(affNomSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel61))
                    .addComponent(affPrixAss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(affElevation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(afficherInfoSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel64))
                    .addGroup(afficherInfoSiegeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jLabel63.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel63.setText("Information Siege - Offre");

        jLabel66.setText("Description Offre :");

        jLabel67.setText("Quantite Siege :");

        jLabel65.setText("Pourcentage Offre :");

        siegeDescOffre.setEditable(false);

        siegePourOffre.setEditable(false);

        siegeQuanOffre.setEditable(false);

        javax.swing.GroupLayout dialogueInfoOffreSiegeLayout = new javax.swing.GroupLayout(dialogueInfoOffreSiege.getContentPane());
        dialogueInfoOffreSiege.getContentPane().setLayout(dialogueInfoOffreSiegeLayout);
        dialogueInfoOffreSiegeLayout.setHorizontalGroup(
            dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueInfoOffreSiegeLayout.createSequentialGroup()
                .addGroup(dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogueInfoOffreSiegeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator11))
                    .addGroup(dialogueInfoOffreSiegeLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel63))
                    .addGroup(dialogueInfoOffreSiegeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel66)
                            .addComponent(jLabel65)
                            .addComponent(jLabel67))
                        .addGap(44, 44, 44)
                        .addGroup(dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(siegeDescOffre)
                            .addComponent(siegePourOffre)
                            .addComponent(siegeQuanOffre, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))
                .addContainerGap())
        );
        dialogueInfoOffreSiegeLayout.setVerticalGroup(
            dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogueInfoOffreSiegeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel63)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(siegeDescOffre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(siegePourOffre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(dialogueInfoOffreSiegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(siegeQuanOffre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Système de planification d'évènement");
        setBackground(new java.awt.Color(250, 250, 250));

        mainPanel.setBackground(new java.awt.Color(130, 130, 130));
        mainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mainPanel.setAutoscrolls(true);
        mainPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        mainPanel.setPreferredSize(new java.awt.Dimension(960, 610));
        mainPanel.setLayout(new java.awt.BorderLayout());

        buttonTopPanel.setBackground(new java.awt.Color(100, 100, 100));
        buttonTopPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanel.setPreferredSize(new java.awt.Dimension(1920, 30));

        buttonTopPanelOpen.setBackground(new java.awt.Color(255, 255, 255));
        buttonTopPanelOpen.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_folder.png"))); // NOI18N
        buttonTopPanelOpen.setToolTipText("Ouvrir fichier");
        buttonTopPanelOpen.setAlignmentY(0.0F);
        buttonTopPanelOpen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelOpen.setBorderPainted(false);
        buttonTopPanelOpen.setContentAreaFilled(false);
        buttonTopPanelOpen.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelOpen.setIconTextGap(0);
        buttonTopPanelOpen.setLabel(" ");
        buttonTopPanelOpen.setMargin(new java.awt.Insets(0, 50, 0, 0));
        buttonTopPanelOpen.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelOpen.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelOpen.setPreferredSize(new java.awt.Dimension(40, 50));
        buttonTopPanelOpen.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_folder_over.png"))); // NOI18N
        buttonTopPanelOpen.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelOpen.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelOpenActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelOpen);

        buttonTopPanelSave.setBackground(new java.awt.Color(255, 255, 255));
        buttonTopPanelSave.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_save.png"))); // NOI18N
        buttonTopPanelSave.setToolTipText("Sauvegarder fichier");
        buttonTopPanelSave.setAlignmentY(0.0F);
        buttonTopPanelSave.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelSave.setBorderPainted(false);
        buttonTopPanelSave.setContentAreaFilled(false);
        buttonTopPanelSave.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelSave.setIconTextGap(0);
        buttonTopPanelSave.setLabel(" ");
        buttonTopPanelSave.setMargin(new java.awt.Insets(0, 50, 0, 0));
        buttonTopPanelSave.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelSave.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelSave.setPreferredSize(new java.awt.Dimension(30, 50));
        buttonTopPanelSave.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_save_over.png"))); // NOI18N
        buttonTopPanelSave.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelSave.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelSaveActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelSave);

        buttonTopPanelAnnuler.setBackground(new java.awt.Color(255, 255, 255));
        buttonTopPanelAnnuler.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelAnnuler.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_annuler.png"))); // NOI18N
        buttonTopPanelAnnuler.setToolTipText("Annuler action");
        buttonTopPanelAnnuler.setAlignmentY(0.0F);
        buttonTopPanelAnnuler.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelAnnuler.setBorderPainted(false);
        buttonTopPanelAnnuler.setContentAreaFilled(false);
        buttonTopPanelAnnuler.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelAnnuler.setIconTextGap(0);
        buttonTopPanelAnnuler.setLabel(" ");
        buttonTopPanelAnnuler.setMargin(new java.awt.Insets(0, 50, 0, 0));
        buttonTopPanelAnnuler.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelAnnuler.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelAnnuler.setPreferredSize(new java.awt.Dimension(30, 50));
        buttonTopPanelAnnuler.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_annuler_over.png"))); // NOI18N
        buttonTopPanelAnnuler.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelAnnuler.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelAnnulerActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelAnnuler);

        buttonTopPanelRepeter.setBackground(new java.awt.Color(255, 255, 255));
        buttonTopPanelRepeter.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelRepeter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_repeter.png"))); // NOI18N
        buttonTopPanelRepeter.setToolTipText("Repeter action");
        buttonTopPanelRepeter.setAlignmentY(0.0F);
        buttonTopPanelRepeter.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelRepeter.setBorderPainted(false);
        buttonTopPanelRepeter.setContentAreaFilled(false);
        buttonTopPanelRepeter.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelRepeter.setIconTextGap(0);
        buttonTopPanelRepeter.setLabel(" ");
        buttonTopPanelRepeter.setMargin(new java.awt.Insets(0, 50, 0, 0));
        buttonTopPanelRepeter.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelRepeter.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelRepeter.setPreferredSize(new java.awt.Dimension(30, 50));
        buttonTopPanelRepeter.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_repeter_over.png"))); // NOI18N
        buttonTopPanelRepeter.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelRepeter.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelRepeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelRepeterActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelRepeter);

        buttonTopPanelZoomIn.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelZoomIn);
        buttonTopPanelZoomIn.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelZoomIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_zoom_in.png"))); // NOI18N
        buttonTopPanelZoomIn.setToolTipText("Zoomer");
        buttonTopPanelZoomIn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelZoomIn.setContentAreaFilled(false);
        buttonTopPanelZoomIn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelZoomIn.setIconTextGap(0);
        buttonTopPanelZoomIn.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelZoomIn.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelZoomIn.setPreferredSize(new java.awt.Dimension(25, 50));
        buttonTopPanelZoomIn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_zoom_in_over.png"))); // NOI18N
        buttonTopPanelZoomIn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_zoom_in_over.png"))); // NOI18N
        buttonTopPanelZoomIn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelZoomIn.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelZoomInActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelZoomIn);

        buttonTopPanelZoomOut.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelZoomOut);
        buttonTopPanelZoomOut.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelZoomOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_zoom_out.png"))); // NOI18N
        buttonTopPanelZoomOut.setToolTipText("Dezoomer");
        buttonTopPanelZoomOut.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelZoomOut.setContentAreaFilled(false);
        buttonTopPanelZoomOut.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelZoomOut.setIconTextGap(0);
        buttonTopPanelZoomOut.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelZoomOut.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelZoomOut.setPreferredSize(new java.awt.Dimension(25, 50));
        buttonTopPanelZoomOut.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_zoom_out_over.png"))); // NOI18N
        buttonTopPanelZoomOut.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_zoom_out_over.png"))); // NOI18N
        buttonTopPanelZoomOut.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelZoomOut.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelZoomOutActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelZoomOut);

        buttonTopPanelDeplacer.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelDeplacer);
        buttonTopPanelDeplacer.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelDeplacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_deplacer.png"))); // NOI18N
        buttonTopPanelDeplacer.setToolTipText("Selectionner/Deplacer");
        buttonTopPanelDeplacer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelDeplacer.setContentAreaFilled(false);
        buttonTopPanelDeplacer.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelDeplacer.setIconTextGap(0);
        buttonTopPanelDeplacer.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDeplacer.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDeplacer.setPreferredSize(new java.awt.Dimension(25, 50));
        buttonTopPanelDeplacer.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_deplacer_over.png"))); // NOI18N
        buttonTopPanelDeplacer.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_deplacer_over.png"))); // NOI18N
        buttonTopPanelDeplacer.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelDeplacer.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelDeplacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelDeplacerActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelDeplacer);

        jPanel4.setBackground(new java.awt.Color(100, 100, 100));
        jPanel4.setMinimumSize(new java.awt.Dimension(100, 50));
        jPanel4.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jComboBoxSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select. Scène", "Sélect. Section rectangulaire", "Sélect. Section irrégulière", "Sélect. Section admission générale", "Sélect. Rangé", "Sélect. Siège", "Sélect. Point" }));
        jComboBoxSelection.setToolTipText("Sélectionner");
        jComboBoxSelection.setMinimumSize(new java.awt.Dimension(100, 27));
        jComboBoxSelection.setPreferredSize(new java.awt.Dimension(225, 27));
        jComboBoxSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelectionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 35, 0);
        jPanel4.add(jComboBoxSelection, gridBagConstraints);

        buttonTopPanel.add(jPanel4);

        buttonTopPanelDessiner.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelDessiner);
        buttonTopPanelDessiner.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelDessiner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_dessin.png"))); // NOI18N
        buttonTopPanelDessiner.setToolTipText("Créer section irrégulière");
        buttonTopPanelDessiner.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelDessiner.setContentAreaFilled(false);
        buttonTopPanelDessiner.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelDessiner.setIconTextGap(0);
        buttonTopPanelDessiner.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDessiner.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDessiner.setPreferredSize(new java.awt.Dimension(30, 50));
        buttonTopPanelDessiner.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_dessin_over.png"))); // NOI18N
        buttonTopPanelDessiner.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_dessin_over.png"))); // NOI18N
        buttonTopPanelDessiner.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelDessiner.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelDessiner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelDessinerActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelDessiner);

        buttonTopPanelDessinerReg.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelDessinerReg);
        buttonTopPanelDessinerReg.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelDessinerReg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_dessin_reg.png"))); // NOI18N
        buttonTopPanelDessinerReg.setToolTipText("Créer section reguliere");
        buttonTopPanelDessinerReg.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelDessinerReg.setContentAreaFilled(false);
        buttonTopPanelDessinerReg.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelDessinerReg.setIconTextGap(0);
        buttonTopPanelDessinerReg.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDessinerReg.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDessinerReg.setPreferredSize(new java.awt.Dimension(25, 50));
        buttonTopPanelDessinerReg.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_dessin_reg_over.png"))); // NOI18N
        buttonTopPanelDessinerReg.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_dessin_reg_over.png"))); // NOI18N
        buttonTopPanelDessinerReg.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelDessinerReg.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelDessinerReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelDessinerRegActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelDessinerReg);

        buttonTopPanelDessinerScene.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelDessinerScene);
        buttonTopPanelDessinerScene.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelDessinerScene.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_scene.png"))); // NOI18N
        buttonTopPanelDessinerScene.setToolTipText("Dessiner Scène");
        buttonTopPanelDessinerScene.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelDessinerScene.setContentAreaFilled(false);
        buttonTopPanelDessinerScene.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelDessinerScene.setIconTextGap(0);
        buttonTopPanelDessinerScene.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDessinerScene.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelDessinerScene.setPreferredSize(new java.awt.Dimension(30, 50));
        buttonTopPanelDessinerScene.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_scene_over.png"))); // NOI18N
        buttonTopPanelDessinerScene.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_scene_over.png"))); // NOI18N
        buttonTopPanelDessinerScene.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelDessinerScene.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelDessinerScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelDessinerSceneActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelDessinerScene);

        buttonTopPanelModifierScene.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelModifierScene);
        buttonTopPanelModifierScene.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelModifierScene.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_scene_modif.png"))); // NOI18N
        buttonTopPanelModifierScene.setToolTipText("Modifier Scène");
        buttonTopPanelModifierScene.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelModifierScene.setContentAreaFilled(false);
        buttonTopPanelModifierScene.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelModifierScene.setIconTextGap(0);
        buttonTopPanelModifierScene.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelModifierScene.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelModifierScene.setPreferredSize(new java.awt.Dimension(30, 50));
        buttonTopPanelModifierScene.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_scene_modif_over.png"))); // NOI18N
        buttonTopPanelModifierScene.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_scene_modif_over.png"))); // NOI18N
        buttonTopPanelModifierScene.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelModifierScene.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelModifierScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelModifierSceneActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelModifierScene);

        buttonTopPanelRotationScene.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelRotationScene);
        buttonTopPanelRotationScene.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelRotationScene.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_rot_scene.png"))); // NOI18N
        buttonTopPanelRotationScene.setToolTipText("Rotation Scène");
        buttonTopPanelRotationScene.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelRotationScene.setContentAreaFilled(false);
        buttonTopPanelRotationScene.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelRotationScene.setIconTextGap(0);
        buttonTopPanelRotationScene.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelRotationScene.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelRotationScene.setPreferredSize(new java.awt.Dimension(23, 50));
        buttonTopPanelRotationScene.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_rot_scene_over.png"))); // NOI18N
        buttonTopPanelRotationScene.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_rot_scene_over.png"))); // NOI18N
        buttonTopPanelRotationScene.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelRotationScene.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelRotationScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelRotationSceneActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelRotationScene);

        buttonTopPanelSupprimer.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTopMenu.add(buttonTopPanelSupprimer);
        buttonTopPanelSupprimer.setForeground(new java.awt.Color(255, 255, 255));
        buttonTopPanelSupprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_supprimer.png"))); // NOI18N
        buttonTopPanelSupprimer.setToolTipText("Modifier Scène");
        buttonTopPanelSupprimer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTopPanelSupprimer.setContentAreaFilled(false);
        buttonTopPanelSupprimer.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        buttonTopPanelSupprimer.setIconTextGap(0);
        buttonTopPanelSupprimer.setMaximumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelSupprimer.setMinimumSize(new java.awt.Dimension(0, 0));
        buttonTopPanelSupprimer.setPreferredSize(new java.awt.Dimension(25, 50));
        buttonTopPanelSupprimer.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_supprimer_over.png"))); // NOI18N
        buttonTopPanelSupprimer.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_supprimer_over.png"))); // NOI18N
        buttonTopPanelSupprimer.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        buttonTopPanelSupprimer.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        buttonTopPanelSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTopPanelSupprimerActionPerformed(evt);
            }
        });
        buttonTopPanel.add(buttonTopPanelSupprimer);

        checkBoxActiverGrille.setBackground(new java.awt.Color(100, 100, 100));
        checkBoxActiverGrille.setFont(new java.awt.Font("Helvetica", 0, 10)); // NOI18N
        checkBoxActiverGrille.setForeground(new java.awt.Color(153, 153, 153));
        checkBoxActiverGrille.setText("Activer grille");
        checkBoxActiverGrille.setMargin(new java.awt.Insets(0, 5, 0, 1));
        checkBoxActiverGrille.setPreferredSize(new java.awt.Dimension(100, 50));
        checkBoxActiverGrille.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        checkBoxActiverGrille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxActiverGrilleActionPerformed(evt);
            }
        });
        buttonTopPanel.add(checkBoxActiverGrille);

        mainPanel.add(buttonTopPanel, java.awt.BorderLayout.PAGE_START);

        menuPalettePosition.setBackground(new java.awt.Color(180, 180, 180));
        menuPalettePosition.setPreferredSize(new java.awt.Dimension(210, 570));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(207, 210));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setText("x :");

        jLabel6.setBackground(new java.awt.Color(100, 100, 100));
        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Position / Format");
        jLabel6.setOpaque(true);

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jLabel14.setText("y :");

        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jLabel15.setText("Angle :");

        jLabel16.setText("Longueur: ");

        jLabel17.setText("Profondeur: ");

        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });

        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jButton1SiegeManuel.setText("Ajouter un siege");
        jButton1SiegeManuel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1SiegeManuelActionPerformed(evt);
            }
        });

        jButtonSectionGenerale.setText("Ajouter section generale");
        jButtonSectionGenerale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSectionGeneraleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jButtonSectionGenerale))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel3))
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField11, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1SiegeManuel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))
                    .addComponent(jLabel3))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1SiegeManuel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSectionGenerale)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(207, 210));

        jLabel30.setBackground(new java.awt.Color(100, 100, 100));
        jLabel30.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Prix");
        jLabel30.setOpaque(true);

        jPanelPrix.setLayout(new javax.swing.BoxLayout(jPanelPrix, javax.swing.BoxLayout.Y_AXIS));
        jScrollPanePrix.setViewportView(jPanelPrix);

        jPanel3.setBackground(new java.awt.Color(100, 100, 100));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 7, 0));

        jButtonAjoutPrix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_ajout.png"))); // NOI18N
        jButtonAjoutPrix.setToolTipText("Ajouter prix");
        jButtonAjoutPrix.setAlignmentY(0.0F);
        jButtonAjoutPrix.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonAjoutPrix.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jButtonAjoutPrix.setMinimumSize(new java.awt.Dimension(23, 23));
        jButtonAjoutPrix.setPreferredSize(new java.awt.Dimension(18, 23));
        jButtonAjoutPrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjoutPrixActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonAjoutPrix);

        jButtonSupprimerPrix.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSupprimerPrix.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSupprimerPrix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_trash.png"))); // NOI18N
        jButtonSupprimerPrix.setToolTipText("Effacer prix");
        jButtonSupprimerPrix.setAlignmentY(0.0F);
        jButtonSupprimerPrix.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonSupprimerPrix.setContentAreaFilled(false);
        jButtonSupprimerPrix.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonSupprimerPrix.setIconTextGap(0);
        jButtonSupprimerPrix.setMaximumSize(new java.awt.Dimension(0, 0));
        jButtonSupprimerPrix.setMinimumSize(new java.awt.Dimension(0, 0));
        jButtonSupprimerPrix.setPreferredSize(new java.awt.Dimension(18, 23));
        jButtonSupprimerPrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerPrixActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonSupprimerPrix);

        jPanelSelectionPrixAuto.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButtonCreerPrixAuto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_calculer_auto.png"))); // NOI18N
        jButtonCreerPrixAuto.setBorder(null);
        jButtonCreerPrixAuto.setPreferredSize(new java.awt.Dimension(23, 15));
        jButtonCreerPrixAuto.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icone_calculer_auto_over.png"))); // NOI18N
        jButtonCreerPrixAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerPrixAutoActionPerformed(evt);
            }
        });
        jPanelSelectionPrixAuto.add(jButtonCreerPrixAuto);

        jLabel29.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jLabel29.setText("Calculer prix Auto");
        jPanelSelectionPrixAuto.add(jLabel29);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPanePrix, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelSelectionPrixAuto, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPanePrix, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelSelectionPrixAuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        creerOffre.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        creerOffre.setPreferredSize(new java.awt.Dimension(207, 210));

        jLabel58.setBackground(new java.awt.Color(100, 100, 100));
        jLabel58.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("Offres / Rabais");
        jLabel58.setOpaque(true);

        jScrollPaneOffre.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jScrollPaneOffreMouseMoved(evt);
            }
        });

        jPanelOffre.setLayout(new javax.swing.BoxLayout(jPanelOffre, javax.swing.BoxLayout.Y_AXIS));
        jScrollPaneOffre.setViewportView(jPanelOffre);

        creerButton.setBackground(java.awt.Color.gray);
        creerButton.setText("Créer Offre");
        creerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creerOffreLayout = new javax.swing.GroupLayout(creerOffre);
        creerOffre.setLayout(creerOffreLayout);
        creerOffreLayout.setHorizontalGroup(
            creerOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPaneOffre, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(creerOffreLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(creerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        creerOffreLayout.setVerticalGroup(
            creerOffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creerOffreLayout.createSequentialGroup()
                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneOffre, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(creerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout menuPalettePositionLayout = new javax.swing.GroupLayout(menuPalettePosition);
        menuPalettePosition.setLayout(menuPalettePositionLayout);
        menuPalettePositionLayout.setHorizontalGroup(
            menuPalettePositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPalettePositionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPalettePositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(creerOffre, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addGroup(menuPalettePositionLayout.createSequentialGroup()
                        .addGroup(menuPalettePositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        menuPalettePositionLayout.setVerticalGroup(
            menuPalettePositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPalettePositionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(creerOffre, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainPanel.add(menuPalettePosition, java.awt.BorderLayout.EAST);

        drawingPanel.setAutoscrolls(true);
        drawingPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                drawingPanelMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                drawingPanelMouseDragged(evt);
            }
        });
        drawingPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawingPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                drawingPanelMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drawingPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                drawingPanelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout drawingPanelLayout = new javax.swing.GroupLayout(drawingPanel);
        drawingPanel.setLayout(drawingPanelLayout);
        drawingPanelLayout.setHorizontalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        drawingPanelLayout.setVerticalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
        );

        mainPanel.add(drawingPanel, java.awt.BorderLayout.CENTER);

        topMenuBar.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        topMenuBar.setPreferredSize(new java.awt.Dimension(960, 22));

        fichierMenu.setText("Fichier");

        fichierSousMenuNouveau.setText("Nouveau Plan");
        fichierSousMenuNouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierSousMenuNouveauActionPerformed(evt);
            }
        });
        fichierMenu.add(fichierSousMenuNouveau);

        fichierSousMenuOuvrir.setText("Ouvrir Plan");
        fichierSousMenuOuvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierSousMenuOuvrirActionPerformed(evt);
            }
        });
        fichierMenu.add(fichierSousMenuOuvrir);

        fichierSousMenuSauvegarder.setText("Sauvegarder");
        fichierSousMenuSauvegarder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierSousMenuSauvegarderActionPerformed(evt);
            }
        });
        fichierMenu.add(fichierSousMenuSauvegarder);

        fichierSousMenuExporter.setText("Exporter en image");
        fichierSousMenuExporter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierSousMenuExporterActionPerformed(evt);
            }
        });
        fichierMenu.add(fichierSousMenuExporter);

        fichierSousMenuQuitter.setText("Quitter");
        fichierSousMenuQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierSousMenuQuitterActionPerformed(evt);
            }
        });
        fichierMenu.add(fichierSousMenuQuitter);

        topMenuBar.add(fichierMenu);

        editionMenu.setText("Edition");

        editionMenuCouper.setText("Couper");
        editionMenuCouper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editionMenuCouperActionPerformed(evt);
            }
        });
        editionMenu.add(editionMenuCouper);

        editionMenuCopier.setText("Copier");
        editionMenu.add(editionMenuCopier);

        editionMenuColler.setText("Coller");
        editionMenu.add(editionMenuColler);

        editionMenuAnnuler.setText("Annuler");
        editionMenu.add(editionMenuAnnuler);

        editionMenuRepeter.setText("Répéter");
        editionMenu.add(editionMenuRepeter);

        jMenuItem1.setText("Modifier Plan Salle");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        editionMenu.add(jMenuItem1);

        jMenuItem2.setText("Modifier Scène");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        editionMenu.add(jMenuItem2);

        jMenuItem3.setText("Modifier Section Rect.");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        editionMenu.add(jMenuItem3);

        topMenuBar.add(editionMenu);

        presentationMenu.setText("Présentation");

        presentationSousMenuSection.setText("Section");
        presentationSousMenuSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentationSousMenuSectionActionPerformed(evt);
            }
        });
        presentationMenu.add(presentationSousMenuSection);

        presentationSousMenuPosition.setText("Position Format");
        presentationMenu.add(presentationSousMenuPosition);

        presentationSousMenuPrix.setText("Prix");
        presentationSousMenuPrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentationSousMenuPrixActionPerformed(evt);
            }
        });
        presentationMenu.add(presentationSousMenuPrix);

        presentationSousMenuOffre.setText("Offre");
        presentationMenu.add(presentationSousMenuOffre);

        presentationSousMenuInfo.setText("Information Evenement");
        presentationSousMenuInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentationSousMenuInfoActionPerformed(evt);
            }
        });
        presentationMenu.add(presentationSousMenuInfo);

        topMenuBar.add(presentationMenu);

        setJMenuBar(topMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fichierSousMenuOuvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierSousMenuOuvrirActionPerformed
        JFileChooser myFileChooser = new JFileChooser();
        myFileChooser.setDialogTitle("Ouvrir plan");
        int action = myFileChooser.showOpenDialog(this);
        
        String strPath = "";
        
        if(action == JFileChooser.APPROVE_OPTION)
        {
            File f = myFileChooser.getSelectedFile();
            strPath = f.getAbsolutePath();

            try
           {    

               controlleur.ouvrirPlan(strPath);
               drawingPanel.repaint();
               jPanelPrix.revalidate(); //fonctionne pas
               jScrollPanePrix.revalidate();   //fonctionne pas
           }
           catch (Exception e)
           {
               System.err.println(e.getMessage());
           } 
        }   
    }//GEN-LAST:event_fichierSousMenuOuvrirActionPerformed

    private void fichierSousMenuQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierSousMenuQuitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_fichierSousMenuQuitterActionPerformed

    private void fichierSousMenuNouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierSousMenuNouveauActionPerformed
        dialogueCreationPlanSalle.pack();
        dialogueCreationPlanSalle.setLocationRelativeTo(this);
        dialogueCreationPlanSalle.setVisible (true);
    }//GEN-LAST:event_fichierSousMenuNouveauActionPerformed

    private void editionMenuCouperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editionMenuCouperActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editionMenuCouperActionPerformed

    private void buttonTopPanelOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelOpenActionPerformed
        fileChooser.showOpenDialog(this);
    }//GEN-LAST:event_buttonTopPanelOpenActionPerformed

    private void fichierSousMenuSauvegarderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierSousMenuSauvegarderActionPerformed

        JFileChooser myFileChooser = new JFileChooser();
        myFileChooser.setDialogTitle("Sauvegarder sous");
        int action = myFileChooser.showSaveDialog(this);
        
        String strPath = "";
        
        if(action == JFileChooser.APPROVE_OPTION)
        {
            File f = myFileChooser.getSelectedFile();
            strPath = f.getAbsolutePath() + ".plan";
         try
        {    

        FileOutputStream fosData = new FileOutputStream(strPath);
        ObjectOutputStream oosData = new ObjectOutputStream(fosData);
        oosData.writeObject(controlleur.getPlanDeSalle());

        oosData.close();
        fosData.close();
        }
        catch (Exception e)
        {
            System.err.println(e.getMessage());
        } 
            
        }   ;
    
    }//GEN-LAST:event_fichierSousMenuSauvegarderActionPerformed

    private void buttonTopPanelSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelSaveActionPerformed
        fileChooser.showSaveDialog(this);
    }//GEN-LAST:event_buttonTopPanelSaveActionPerformed

    private void buttonTopPanelDeplacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelDeplacerActionPerformed
        // TODO add your handling code here:
        this.setModeApplication(ModeApplication.SELECTION);
    }//GEN-LAST:event_buttonTopPanelDeplacerActionPerformed

    private void buttonTopPanelDessinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelDessinerActionPerformed
        // TODO add your handling code here:
        this.setModeApplication(ModeApplication.AJOUTERSECTIONIRR);
        diaglogueAjoutSectionRect.setTitle("Ajouter Section Irreguliere");
        diaglogueAjoutSectionRect.pack();
        diaglogueAjoutSectionRect.setLocationRelativeTo(this);
        largeurEspVitalDefaut.setText(espaceVitalParDefaut.get(1).toString());
        longueurEspVitalDefaut.setText(espaceVitalParDefaut.get(0).toString());
        jTextFieldNbColonnes.setEnabled(false);
        jTextFieldNbRangee.setEnabled(false);
        diaglogueAjoutSectionRect.setVisible (true);
        
        nbClic=0;
        poly=new Polygon();
    }//GEN-LAST:event_buttonTopPanelDessinerActionPerformed

    private void buttonTopPanelDessinerRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelDessinerRegActionPerformed
         this.setModeApplication(ModeApplication.AJOUTERSECTIONRECT);
         diaglogueAjoutSectionRect.setTitle("Ajouter Section Rectangulaire");
         diaglogueAjoutSectionRect.pack();
        diaglogueAjoutSectionRect.setLocationRelativeTo(this);
       // largeurEspVitalDefaut.setText(espaceVitalParDefaut.get(1).toString());
       // longueurEspVitalDefaut.setText(espaceVitalParDefaut.get(0).toString());
        // largeurEspVitalDefaut.setText(Integer.toString(this.controlleur.getPlan().getEspaceVital().getDimensionEspaceVital().width));
      //  longueurEspVitalDefaut.setText(Integer.toString(this.controlleur.getPlan().getEspaceVital().getDimensionEspaceVital().height));
       
       largeurEspVitalDefaut.setText(Double.toString(this.controlleur.getPlan().getEspaceVital().getLargeur()));
        longueurEspVitalDefaut.setText(Double.toString(this.controlleur.getPlan().getEspaceVital().getProfondeur()));
      jTextFieldNbRangee.setEnabled(true);
        jTextFieldNbColonnes.setEnabled(true);
        diaglogueAjoutSectionRect.setVisible (true);
    }//GEN-LAST:event_buttonTopPanelDessinerRegActionPerformed

    private void buttonTopPanelAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelAnnulerActionPerformed
      this.controlleur.annulerDerniereModification();
      drawingPanel.repaint();   
// TODO add your handling code here:
    }//GEN-LAST:event_buttonTopPanelAnnulerActionPerformed

    private void buttonTopPanelRepeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelRepeterActionPerformed
      this.controlleur.retablirDerniereModification();
      drawingPanel.repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTopPanelRepeterActionPerformed

    private void buttonTopPanelZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelZoomInActionPerformed
        // TODO add your handling code here:
         int longueurIncrementer = this.controlleur.getPlan().getInitialDimension().width;
        int largeurIncrementer = this.controlleur.getPlan().getInitialDimension().height;
        
        int longueur = longueurIncrementer + 5;
        int largeur = largeurIncrementer + 5;
        
        this.controlleur.getPlan().setActifZome(true);
        incrementZome =incrementZome+5;
        this.controlleur.getPlan().setZoome(incrementZome);
        
        drawingPanel.setBorder(controlleur.bordureDessin());
        drawingPanel.setMaximumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setPreferredSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setMinimumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setToolTipText("Dessiner ici svp!");
        
        mainPanel.removeAll();
        mainPanel.add(buttonTopPanel, BorderLayout.PAGE_START);
        mainPanel.add(menuPalettePosition, BorderLayout.LINE_END);
        mainPanel.add(controlleur.boxPourCadrerZoneDessin(drawingPanel), BorderLayout.CENTER);
        //jScrollPane1.setBackground(Color.red);
        mainPanel.invalidate();
        mainPanel.validate();
    }//GEN-LAST:event_buttonTopPanelZoomInActionPerformed

    private void buttonTopPanelZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelZoomOutActionPerformed
        // TODO add your handling code here:
        int longueurIncrementer = this.controlleur.getPlan().getInitialDimension().width;
        int largeurIncrementer = this.controlleur.getPlan().getInitialDimension().height;
        
        int longueur = longueurIncrementer - 5;
        int largeur = largeurIncrementer - 5;
        incrementZome =incrementZome - 5;
        this.controlleur.getPlan().setZoome(incrementZome);
        
        drawingPanel.setBorder(controlleur.bordureDessin());
        drawingPanel.setMaximumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setPreferredSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setMinimumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setToolTipText("Dessiner ici svp!");
        
        mainPanel.removeAll();
        mainPanel.add(buttonTopPanel, BorderLayout.PAGE_START);
        mainPanel.add(menuPalettePosition, BorderLayout.LINE_END);
        mainPanel.add(controlleur.boxPourCadrerZoneDessin(drawingPanel), BorderLayout.CENTER);
        //jScrollPane1.setBackground(Color.red);
        mainPanel.invalidate();
        mainPanel.validate();
        
    }//GEN-LAST:event_buttonTopPanelZoomOutActionPerformed
                                                      
    private void checkBoxActiverGrilleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxActiverGrilleActionPerformed
            if(checkBoxActiverGrille.isSelected() == true)
            {
                controlleur.activateGrid();
                
                try {
                    controlleur.memoriserPlan();
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                               
                drawingPanel.repaint();
            }
            else if(checkBoxActiverGrille.isSelected() == false)
            {
                controlleur.deActivateGrid();
             
                try {
                    controlleur.memoriserPlan();
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                drawingPanel.repaint();
            }
    }//GEN-LAST:event_checkBoxActiverGrilleActionPerformed

    private void annulerCreerPlanSalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerCreerPlanSalleActionPerformed
             dialogueCreationPlanSalle.dispose();
    }//GEN-LAST:event_annulerCreerPlanSalleActionPerformed

    private void nomEventInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomEventInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomEventInfoActionPerformed

    private void lieuEventInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lieuEventInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lieuEventInfoActionPerformed

    private void dateEventInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateEventInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateEventInfoActionPerformed

    private void creerPlanSalleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerPlanSalleButtonActionPerformed
        // TODO add your handling code here:
        int longueur = Conversion.deMetreEnPixel(Integer.parseInt(longueurNewPlanDeSalle.getText()));
        int largeur = Conversion.deMetreEnPixel(Integer.parseInt(largeurNewPlanDeSalle.getText()));
        int longueurEspaceVitalDefaut = Integer.parseInt(longueurEspaceVital.getText());
        int largeurEspaceVitalDefaut = Integer.parseInt(largeurEspaceVital.getText());
       
                
        if(nomEventInfo.getText().trim().length()!=0 && lieuEventInfo.getText().trim().length()!=0 && dateEventInfo.getText().trim().length()!=0 && capaciteEventInfo.getText().trim().length()!=0){
        
        monTableu.add(nomEventInfo.getText());
        monTableu.add(lieuEventInfo.getText());
        monTableu.add(dateEventInfo.getText());
        monTableu.add(capaciteEventInfo.getText());
        
        espaceVitalParDefaut.add(longueurEspaceVitalDefaut);
        espaceVitalParDefaut.add(largeurEspaceVitalDefaut);
        
      
        controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur);
        controlleur.getPlan().setEspaceVital(new EspaceVital(longueurEspaceVitalDefaut, largeurEspaceVitalDefaut));
        
        drawingPanel.setBorder(controlleur.bordureDessin());
        drawingPanel.setMaximumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setPreferredSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setMinimumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setToolTipText("Dessiner ici svp!");
        
        mainPanel.removeAll();
        mainPanel.add(buttonTopPanel, BorderLayout.PAGE_START);
        mainPanel.add(menuPalettePosition, BorderLayout.LINE_END);
        mainPanel.add(controlleur.boxPourCadrerZoneDessin(drawingPanel), BorderLayout.CENTER);
        //jScrollPane1.setBackground(Color.red);
        mainPanel.invalidate();
        mainPanel.validate();
        dialogueCreationPlanSalle.dispose();
        }
        
    }//GEN-LAST:event_creerPlanSalleButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        longueurEspVitalFormatted.setText(Integer.toString(espaceVitalParDefaut.get(0)));
        largeurEspVitalFormatted.setText(Integer.toString(espaceVitalParDefaut.get(1)));
        
        this.controlleur.getPlan().setEspaceVital(new EspaceVital(profondeurEspaceDefaut, largeurEspaceDefaut));
        dialogueModifierPlanDeSalle.pack();
        dialogueModifierPlanDeSalle.setLocationRelativeTo(this);
        dialogueModifierPlanDeSalle.setVisible (true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTextFieldNbRangeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNbRangeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNbRangeeActionPerformed

    private void jTextFieldNbColonnesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNbColonnesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNbColonnesActionPerformed

    private void jTextFieldElevationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldElevationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldElevationActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         
             if(this.modeCourant==ModeApplication.AJOUTERSECTIONRECT)
         {this.elevationSection=Integer.parseInt(jTextFieldElevation.getText());
            this.anglesection=Integer.parseInt(jTextFieldAngle.getText());
           // this.largeurEspaceDefaut=espaceVitalParDefaut.get(1);
           // this.profondeurEspaceDefaut=espaceVitalParDefaut.get(0);
            this.largeurEspaceDefaut=(int)Double.parseDouble(largeurEspVitalDefaut.getText());
            this.profondeurEspaceDefaut=(int)Double.parseDouble(longueurEspVitalDefaut.getText());
            
            this.nbRangeSection=Integer.parseInt(jTextFieldNbRangee.getText());
            this.nbColonnesSection=Integer.parseInt(jTextFieldNbColonnes.getText());
            this.nomSection=nomDeSection.getText();
            
            this.setModeApplication(ModeApplication.AJOUTERSECTIONRECT);
            System.out.println("Ancienne valeurs espace vital sont : " + controlleur.getPlan().getEspaceVital().getProfondeur() + " "+controlleur.getPlan().getEspaceVital().getLargeur());
            }
         else if(this.modeCourant==ModeApplication.AJOUTERSECTIONIRR)
            {  this.elevationSection=Integer.parseInt(jTextFieldElevation.getText());
            this.anglesection=Integer.parseInt(jTextFieldAngle.getText());
            this.largeurEspaceDefaut=espaceVitalParDefaut.get(1);
            this.profondeurEspaceDefaut=espaceVitalParDefaut.get(0);
            //this.nbRangeSection=Integer.parseInt(jTextFieldNbRangee.getText());
           // this.nbColonnesSection=Integer.parseInt(jTextFieldNbColonnes.getText());
            this.nomSection=nomDeSection.getText();
            nbClic=0;
            poly=new Polygon();
            this.setModeApplication(ModeApplication.AJOUTERSECTIONIRR);
            }
            diaglogueAjoutSectionRect.dispose();
            //System.out.println("Ancienne valeurs espace vital sont : " + controlleur.getPlan().getEspaceVital().getProfondeur() + " "+controlleur.getPlan().getEspaceVital().getLargeur());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void presentationSousMenuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentationSousMenuInfoActionPerformed
        nomEvent.setText(monTableu.get(0));
        dateEvent.setText(monTableu.get(2));
        lieuEvent.setText(monTableu.get(1));
        capaciteEvent.setText(monTableu.get(3));     
        
        System.out.println("La longueur de l'espace vital est : "+espaceVitalParDefaut.get(0)+ "m et la largeur est de : "+espaceVitalParDefaut.get(1)+"m");
        
        dialogueInfoEvenement.pack();
        dialogueInfoEvenement.setLocationRelativeTo(this);
        dialogueInfoEvenement.setVisible (true);
    }//GEN-LAST:event_presentationSousMenuInfoActionPerformed

    private void presentationSousMenuSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentationSousMenuSectionActionPerformed
        // TODO add your handling code here:
        diaglogueAjoutSectionRect.pack();
        diaglogueAjoutSectionRect.setLocationRelativeTo(this);
        diaglogueAjoutSectionRect.setVisible (true);
    }//GEN-LAST:event_presentationSousMenuSectionActionPerformed

    private void buttonTopPanelDessinerSceneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelDessinerSceneActionPerformed
        this.setModeApplication(ModeApplication.AJOUTERSCENE);
    }//GEN-LAST:event_buttonTopPanelDessinerSceneActionPerformed

    private void drawingPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMousePressed
    
       Point mousePoint = evt.getPoint();
        this.actualMousePoint = mousePoint;
        if (this.modeCourant==ModeApplication.AJOUTERSECTIONRECT)
        {
   
            this.coinGaucheSection=evt.getPoint();
            //System.out.println(evt.getPoint().x);
            if (this.controlleur.getPlan().getScene().getCentreScene()!=null)
            { 
                Point centreScene=this.controlleur.getPlan().getScene().getCentreScene();
             
                if(!this.controlleur.getPlan().trouveSection(this.nomSection))
                {
                this.controlleur.ajoutSectionRectangulaire(this.nomSection, this.elevationSection,this.anglesection,new Dimension(Conversion.deMetreEnPixel(this.largeurEspaceDefaut),Conversion.deMetreEnPixel(this.profondeurEspaceDefaut)),this.nbRangeSection,this.nbColonnesSection,this.coinGaucheSection,centreScene);
                
                try {
                    controlleur.memoriserPlan();
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                drawingPanel.repaint();
                this.setModeApplication(ModeApplication.SELECTION);
               }
                else{System.out.println("******La section rectangulaire de nom:"+this.nomSection+" existe dejà. Veuillez changer de nom pour votre nouvelle section******");}
            
                
            }
            else{System.out.println("DESSINNER D ABORD LA SCENE SVP");}
        }
                else if(this.modeCourant==ModeApplication.AJOUTERSECTIONGEN)
       {
           
           
           if (this.controlleur.getPlan().getScene().getCentreScene()!=null)
            {
                Point centreScene=this.controlleur.getPlan().getScene().getCentreScene();
                if (nbClic==0){
                    pointDebut=evt.getPoint();
                    poly.addPoint(pointDebut.x, pointDebut.y);
                    this.controlleur.getPlan().ajouterPoint(pointDebut);
                   // this.controlleur.ajoutSectionIrreguliere("maSection", 5,90,new Dimension(Conversion.deMetreEnPixel(this.largeurEspaceDefaut),Conversion.deMetreEnPixel(this.profondeurEspaceDefaut)),centreScene,poly);
                    nbClic=nbClic+1;
                    
                try {
                    controlleur.memoriserPlan();
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                    
                    drawingPanel.repaint();
                }
                else
                {
                p_point=evt.getPoint();
                this.controlleur.getPlan().ajouterPoint(p_point);
                poly.addPoint(p_point.x, p_point.y);
                 nbClic=nbClic+1;
                 
                try {
                    controlleur.memoriserPlan();
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
                 
                 drawingPanel.repaint();
                  System.out.println("POINT DEBUT"+pointDebut.x);
                  System.out.println("POINT POINT"+p_point.x);

                  
                  
                 if(this.controlleur.getPlan().getSommetDebut().contains(p_point.x, p_point.y)) 
                {

                    this.controlleur.ajoutSectionGenerale(this.nomSection, this.elevationSection,this.anglesection,new Dimension(Conversion.deMetreEnPixel(espaceVitalParDefaut.get(1)),Conversion.deMetreEnPixel(espaceVitalParDefaut.get(0))),centreScene,poly,5);
                     System.out.println("AJOUT DE GENERALE");
                try {
                    controlleur.memoriserPlan();
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                    
                    drawingPanel.repaint();
                    
                    setModeApplication(ModeApplication.SELECTION);
                    
                }else{System.out.println("CONTIENT PAS");}
                }
                
            } 
       }
        else if(this.modeCourant==ModeApplication.AJOUTERSECTIONIRR)
       {
           
           
           if (this.controlleur.getPlan().getScene().getCentreScene()!=null)
            {
                Point centreScene=this.controlleur.getPlan().getScene().getCentreScene();
                if (nbClic==0){
                    pointDebut=evt.getPoint();
                    poly.addPoint(pointDebut.x, pointDebut.y);
                    this.controlleur.getPlan().ajouterPoint(pointDebut);
                   // this.controlleur.ajoutSectionIrreguliere("maSection", 5,90,new Dimension(Conversion.deMetreEnPixel(this.largeurEspaceDefaut),Conversion.deMetreEnPixel(this.profondeurEspaceDefaut)),centreScene,poly);
                    nbClic=nbClic+1;
                    
                    try 
                    {
                          controlleur.memoriserPlan();
                    } catch (Exception ex) {
                          Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    drawingPanel.repaint();
                }
                else
                {
                p_point=evt.getPoint();
                this.controlleur.getPlan().ajouterPoint(p_point);
                poly.addPoint(p_point.x, p_point.y);
                 nbClic=nbClic+1;
                 
                  try 
                  {
                        controlleur.memoriserPlan();
                  } catch (Exception ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                  }
                  
                  drawingPanel.repaint();
                  System.out.println("POINT DEBUT"+pointDebut.x);
                  System.out.println("POINT POINT"+p_point.x);
                  //if(p_point.equals(pointDebut)||p_point.equals(new Point(pointDebut.x+1,pointDebut.y+1)||)
                //  if(p_point.equals(pointDebut)||p_point.equals(new Point(pointDebut.x+1,pointDebut.y+1))||p_point.equals(new Point(pointDebut.x-1,pointDebut.y-1))||p_point.equals(new Point(pointDebut.x-1,pointDebut.y))||p_point.equals(new Point(pointDebut.x,pointDebut.y-1))||p_point.equals(new Point(pointDebut.x,pointDebut.y+1))||p_point.equals(new Point(pointDebut.x+1,pointDebut.y)))
                
                  
                  
                 if(this.controlleur.getPlan().getSommetDebut().contains(p_point.x, p_point.y)) 
                {
                    if(this.distAutoSieges.isSelected()) 
                        this.controlleur.ajoutSectionIrreguliereAuto(this.nomSection, this.elevationSection,this.anglesection,new Dimension(Conversion.deMetreEnPixel(espaceVitalParDefaut.get(1)),Conversion.deMetreEnPixel(espaceVitalParDefaut.get(0))),centreScene,poly);
                    else
                        this.controlleur.ajoutSectionIrreguliere(this.nomSection, this.elevationSection,this.anglesection,new Dimension(Conversion.deMetreEnPixel(espaceVitalParDefaut.get(1)),Conversion.deMetreEnPixel(espaceVitalParDefaut.get(0))),centreScene,poly);

                    try 
                  {
                        controlleur.memoriserPlan();
                  } catch (Exception ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                  }
                    drawingPanel.repaint();
                    
                    setModeApplication(ModeApplication.SELECTION);
                    
                }else{System.out.println("CONTIENT PAS");}
                }
                
            } 
       }
       else if(this.modeCourant==ModeApplication.AJOUTERSCENE)
       {
            p_point=evt.getPoint();
    
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
           
       }
       else if (this.modeCourant==ModeApplication.AJOUTERSIEGE && SwingUtilities.isLeftMouseButton(evt)){
            
            System.out.println("MODE AJOUT SIEGE");
            this.controlleur.ajouterSiegeManuel(mousePoint.getX(), mousePoint.getY());
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
        }   
 else if (this.modeCourant==ModeApplication.SELECTIONSECTION && SwingUtilities.isLeftMouseButton(evt)){
            
            System.out.println("SELECTION SECTION");
            this.coinGaucheSection=evt.getPoint();
            this.controlleur.switchSelectionStatus(mousePoint.getX(), mousePoint.getY());
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
            
            
            for (SectionRectangulaire itemSection:this.controlleur.getPlan().getListSectionRect())
            {
                if(itemSection.isSelected())
                {
                   
                    nomDeSectionModif.setText(itemSection.getNomSection());
                    jTextFieldNbColonnesModif.setText(Integer.toString(itemSection.getNbColonne()));
                    jTextFieldNbRangeeModif.setText(Integer.toString(itemSection.getNbRange()));
                    jTextFieldAngleModif.setText(Integer.toString(itemSection.getAngleSection()));
                    jTextFieldElevationModif.setText(Integer.toString(itemSection.getElevationSection()));
                    
                    int espacelong=Conversion.dePixelEnMetre(itemSection.getEspaceVitalSection().getDimensionEspaceVital().height);
                    int espacelarg=Conversion.dePixelEnMetre(itemSection.getEspaceVitalSection().getDimensionEspaceVital().width);
                    largeurEspVitalDefautModif.setText(Integer.toString((espacelarg)));
                    longueurEspVitalDefautModif.setText(Integer.toString(espacelong));
                    jTextField11.setText(Integer.toString(itemSection.getNbRange()));
                    jTextField15.setText(Integer.toString(itemSection.getNbColonne()));
                    jTextField13.setText(Integer.toString(itemSection.getAngleSection()));
                    jTextField1.setText(Integer.toString(itemSection.getCoinGauche().x));
                    jTextField9.setText(Integer.toString(itemSection.getCoinGauche().y));

                }
            }
       
        }
         else if (this.modeCourant==ModeApplication.SELECTIONSECTIONIRR && SwingUtilities.isLeftMouseButton(evt)){
            
            System.out.println("SELECTION SECTION IRREGULIERE");
            this.coinGaucheSection=evt.getPoint();
            this.controlleur.switchSelectionStatusIrr(mousePoint.getX(), mousePoint.getY());
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
            
            
           
        } 
        else if (this.modeCourant==ModeApplication.SELECTIONSECTIONADGEN && SwingUtilities.isLeftMouseButton(evt)){
            
            System.out.println("SELECTION SECTION GENERALE");
            this.coinGaucheSection=evt.getPoint();
            this.controlleur.switchSelectionStatusGen(mousePoint.getX(), mousePoint.getY());
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
            
            
           
        } 
        else if (this.modeCourant==ModeApplication.SELECTIONSCENE && SwingUtilities.isLeftMouseButton(evt)){
            
            System.out.println("SELECTION SCENE");
            this.controlleur.switchSelectionStatusScene(mousePoint.getX(), mousePoint.getY());
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
        }  
        else if (this.modeCourant==ModeApplication.SELECTIONSIEGE && SwingUtilities.isLeftMouseButton(evt)){
            
            System.out.println("SELECTION SIEGE");
            this.controlleur.switchSelectionStatusSiege(mousePoint.getX(), mousePoint.getY());
            this.controlleur.switchSelectionStatusSiegeIrr(mousePoint.getX(), mousePoint.getY());
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
        }     
    else if (this.modeCourant==ModeApplication.SELECTIONRANGE && SwingUtilities.isLeftMouseButton(evt)){
           
            System.out.println("SELECTION RANGE");
            this.controlleur.switchSelectionStatusRange(mousePoint.getX(), mousePoint.getY());
            this.controlleur.switchSelectionStatusRangeIrr(mousePoint.getX(), mousePoint.getY());
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
        }    
        else if (this.modeCourant==ModeApplication.SELECTION){
            
            System.out.println("AUCUN OBJET SELECTIONNE");
            
        }  
         else if (this.modeCourant==ModeApplication.SUPPRIMER){
            
            System.out.println("MODE SUPPRESSION VOUS ALLEZ SUPPRIMER UNE SECTION");
            for (SectionRectangulaire itemSection:this.controlleur.getPlan().getListSectionRect())
            {
                if(itemSection.isSelected())
                {
                    this.controlleur.getPlan().supprimerSection(itemSection.getNomSection());
                }
            }
            setModeApplication(ModeApplication.SELECTION);
            
            try 
            {
                  controlleur.memoriserPlan();
            } catch (Exception ex) {
                  Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            drawingPanel.repaint();
        }  
        
    }//GEN-LAST:event_drawingPanelMousePressed

    private void jTextFieldPrixBilletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrixBilletActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrixBilletActionPerformed

    private void jButtonAnnulerCreerPrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerCreerPrixActionPerformed
             dialogueAjouterPrix.dispose();
    }//GEN-LAST:event_jButtonAnnulerCreerPrixActionPerformed

    private void jButtonAcceptCreationPrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptCreationPrixActionPerformed
              
                GuiColorPanel nouveauLabel = new GuiColorPanel();// instancie mes pannel de prix
        
                // récupére le prix et sa couleur de la boîte de dialogue
                Color couleurSelection = jPanelColorChoose.getBackground();
                double prix = Double.parseDouble(jTextFieldPrixBillet.getText());
                
                //appelle le controlleur pour créer le prix
                this.controlleur.creerPrix(prix, couleurSelection);
                
                //passe à travers la liste de prix pour les afficher
                for (Prix objetPrix : this.controlleur.getListPrix())
                {
                // ici on fa crée les component avec les bon montant
                nouveauLabel.setColorPanelPrix(objetPrix.getColor());
                nouveauLabel.setLabelPrix(objetPrix.getPrix());
                
                nouveauLabel.addMouseListener(new java.awt.event.MouseAdapter() 
        {
            
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) 
            {
                if(nouveauLabel.getIsSelected() == false)

                {
                    boolean isSelected = true;
                    nouveauLabel.setBackgroundPanelGuiSelected();

                    controlleur.assignerPrixElementSelectionne(nouveauLabel.getColorLabel(),nouveauLabel.getLabelMontalPrix());
                    
                    
                    try 
                    {
                          controlleur.memoriserPlan();
                    } catch (Exception ex) {
                          Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                    drawingPanel.repaint();
                }          

            }

            });
                
                
                
                

                jPanelPrix.add(nouveauLabel);
                
                jPanelPrix.setPreferredSize(new Dimension(0, jPanel1.getPreferredSize().height + 50));
                jPanelPrix.revalidate(); 
                jScrollPanePrix.revalidate();    
                
                
                }
        
            listeGuiColor.addComponentListe(nouveauLabel);
            jPanel2.revalidate();
        
            dialogueAjouterPrix.dispose();
            jTextFieldPrixBillet.setText(""); // remet la boîte texte video
            jPanelColorChoose.setBackground(Color.WHITE); // remet la couleur à blan
    }//GEN-LAST:event_jButtonAcceptCreationPrixActionPerformed

    private void jPanelColorChooseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelColorChooseMouseClicked
        Color nouvelleCouleur = JColorChooser.showDialog(dialogueAjouterPrix, "Sélectionner couleur", jPanelColorChoose.getBackground());
       
        if(nouvelleCouleur != null)
        {
                jPanelColorChoose.setBackground(nouvelleCouleur);
        }

    }//GEN-LAST:event_jPanelColorChooseMouseClicked

    private void presentationSousMenuPrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentationSousMenuPrixActionPerformed

    }//GEN-LAST:event_presentationSousMenuPrixActionPerformed

    private void jButtonSupprimerPrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerPrixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSupprimerPrixActionPerformed

    private void jButtonAjoutPrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjoutPrixActionPerformed
        dialogueAjouterPrix.pack();
        dialogueAjouterPrix.setLocationRelativeTo(this);
        dialogueAjouterPrix.setVisible (true);
    }//GEN-LAST:event_jButtonAjoutPrixActionPerformed

    private void jButtonCreerPrixAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerPrixAutoActionPerformed
        dialogueCalculerPrixAuto.pack();
        dialogueCalculerPrixAuto.setLocationRelativeTo(this);
        dialogueCalculerPrixAuto.setVisible (true);
    }//GEN-LAST:event_jButtonCreerPrixAutoActionPerformed

    private void jButtonAccepterPrixAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccepterPrixAutoActionPerformed
        dialogueCalculerPrixAuto.dispose();
    }//GEN-LAST:event_jButtonAccepterPrixAutoActionPerformed

    private void jButtonAnnulerPrixAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerPrixAutoActionPerformed
        dialogueCalculerPrixAuto.dispose();
    }//GEN-LAST:event_jButtonAnnulerPrixAutoActionPerformed

    private void jButtonAppliquerCreationPrixAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAppliquerCreationPrixAutoActionPerformed
      Double prixMin = Double.parseDouble(jTextFieldPrixMinimumBillet.getText());
      Double prixMax = Double.parseDouble(jTextFieldPrixMaximumBillet.getText());
      String attribution = String.valueOf(jComboBoxAttribution.getSelectedItem());
         
      Double revenueTotal = this.controlleur.creePrixAuto(prixMin, prixMax, attribution);
      String revenueAsString = String.format("%.2f", revenueTotal);
      jLabelRevenueTotal.setText(revenueAsString);
      
            try 
      {
            controlleur.memoriserPlan();
      } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
      }
      
      drawingPanel.repaint();


    }//GEN-LAST:event_jButtonAppliquerCreationPrixAutoActionPerformed

    private void jTextFieldPrixMinimumBilletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrixMinimumBilletActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrixMinimumBilletActionPerformed

    private void fermerEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerEventButtonActionPerformed
        // TODO add your handling code here:
     dialogueInfoEvenement.dispose();
    }//GEN-LAST:event_fermerEventButtonActionPerformed

    private void annulerModifierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerModifierButtonActionPerformed
        // TODO add your handling code here:
        dialogueModifierPlanDeSalle.dispose();
    }//GEN-LAST:event_annulerModifierButtonActionPerformed

    private void confirmerModifierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmerModifierButtonActionPerformed
        // TODO add your handling code here:
        //jScrollPane1.setBackground(new Color(224, 224, 232));
       // planDeSalle.setLayout(new FlowLayout());
        //planDeSalle.add(drawingPanel);
        int longueur = Conversion.deMetreEnPixel(Integer.parseInt(longueurFormated.getText()));
        int largeur = Conversion.deMetreEnPixel(Integer.parseInt(largeurFormatted.getText()));
        
        longueurEspVitalFormatted.setText(Integer.toString(espaceVitalParDefaut.get(0)));
        largeurEspVitalFormatted.setText(Integer.toString(espaceVitalParDefaut.get(1)));
        
        int nouvelleLongeurValeurEspVital = Integer.parseInt(longueurEspVitalFormatted.getText());
        int nouvelleLargeurValeurEspVital = Integer.parseInt(largeurEspVitalFormatted.getText());
        
       
        controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur);
        controlleur.getPlan().getEspaceVital().setProfondeur(nouvelleLongeurValeurEspVital);
        controlleur.getPlan().getEspaceVital().setLargeur(nouvelleLargeurValeurEspVital);
        
        System.out.println("Ancienne valeurs espace vital sont : " + espaceVitalParDefaut.get(0) + " "+espaceVitalParDefaut.get(1));
        System.out.println("Nouvelles valeurs espace vital sont : "+  nouvelleLongeurValeurEspVital + " " + nouvelleLargeurValeurEspVital);
        
        drawingPanel.setBorder(controlleur.bordureDessin());
        drawingPanel.setMaximumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setPreferredSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setMinimumSize(controlleur.afficherDialogPourModifierPlanDeSalle(longueur, largeur));
        drawingPanel.setToolTipText("Dessiner ici svp!");
        drawingPanel.repaint();
        
        mainPanel.removeAll();
        mainPanel.add(buttonTopPanel, BorderLayout.PAGE_START);
        mainPanel.add(menuPalettePosition, BorderLayout.LINE_END);
        mainPanel.add(controlleur.boxPourCadrerZoneDessin(drawingPanel), BorderLayout.CENTER);
        //jScrollPane1.setBackground(Color.red);
        mainPanel.invalidate();
        mainPanel.validate();
        dialogueModifierPlanDeSalle.dispose();
        
        
    }//GEN-LAST:event_confirmerModifierButtonActionPerformed

    private void drawingPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseDragged
       
         if (this.modeCourant==ModeApplication.EDITIONSCENE)
        {    
            p_end = evt.getPoint(); 
            this.controlleur.getPlan().modifierDimensionSceneSouris(p_point,p_supDroit, p_end,p_infGauche);
            //this.controlleur.getPlan().modifierDimensionSceneSouris(p_point, p_end);
            int espacelong=Conversion.dePixelEnMetre(this.controlleur.getPlan().getScene().getLongueur());
            int espacelarg=Conversion.dePixelEnMetre(this.controlleur.getPlan().getScene().getLargeur());
            jTextField11.setText(Integer.toString((espacelong)));
            jTextField15.setText(Integer.toString((espacelarg)));
            drawingPanel.repaint();
        }
        else if (this.modeCourant==ModeApplication.SELECTIONSCENE)
        {
            if (SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == false) 
            { 
               // déplacement scène non magétisé
                delta.setLocation((evt.getX() - this.actualMousePoint.x),(evt.getY() - this.actualMousePoint.y));
                this.controlleur.updateSelectedScenePositions(delta);
                this.actualMousePoint = evt.getPoint();
                
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                drawingPanel.repaint();
            }
            else if((SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == true))
            { 
                
                // on obtient le déplacement de la souris
                delta.setLocation(( evt.getX() - this.actualMousePoint.x),( evt.getY()  - this.actualMousePoint.y));
                

                //on prend le coin gauche de la scène actuel
                Point coinGaucheSceneActuel = controlleur.getPlan().getScene().getPointdebut();
                
                // on addition le coin gauche actuel x et x au déplacement
                Point coinGaucheSceneDeplace = new Point(coinGaucheSceneActuel.x + delta.x, coinGaucheSceneActuel.y + delta.y);
                
                // on obtien le point gauche magnétisé temporaire
                Point coinGaucheSceneMagnetise = new Point(controlleur.calculPointMagnetise(coinGaucheSceneDeplace));
                
                //on trouve l'écart entre le point magnétisé final et initial et on utilise ceci pour mettre à jour la scène
                delta.setLocation(coinGaucheSceneMagnetise.x - coinGaucheSceneActuel.x, coinGaucheSceneMagnetise.y - coinGaucheSceneActuel.y);

               // on met à jour le delta qui inclus le déplacement de la souris et le déplacement ajouté par le magnétisme de la grille
                this.controlleur.updateSelectedScenePositions(delta);
                
                this.actualMousePoint = controlleur.calculPointMagnetise(evt.getPoint());
                //this.actualMousePoint = controlleur.calculPointMagnetise(evt.getPoint());
                
                
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                drawingPanel.repaint();
                

                
            }
        }
        else if (this.modeCourant==ModeApplication.SELECTIONSECTION)
        {
            if (SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == false) { 
               
                delta.setLocation((evt.getX() - this.actualMousePoint.x),(evt.getY() - this.actualMousePoint.y));
                this.controlleur.updateSelectedItemsPositions(delta);
                this.actualMousePoint = evt.getPoint();
                
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                drawingPanel.repaint();
            }
          
            else if(SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == true) { 
                
                // on obtien le déplacement de la souris
                delta.setLocation((evt.getX() - this.actualMousePoint.x),(evt.getY() - this.actualMousePoint.y));                           
                this.controlleur.updateSelectedItemsPositions(delta);
                this.actualMousePoint = controlleur.calculPointMagnetise(evt.getPoint());
                
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                drawingPanel.repaint();
            }
            
        }
        else if (this.modeCourant==ModeApplication.SELECTIONSECTIONIRR)
        {
            if (SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == false) { 
               
               delta.setLocation((evt.getX() - this.actualMousePoint.x),(evt.getY() - this.actualMousePoint.y));
               this.controlleur.updateSelectedItemsPositionsIrr(delta);
               this.actualMousePoint = evt.getPoint();
               
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
               
               drawingPanel.repaint();
            }
            
            else if (SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == true) { 
               
               delta.setLocation((evt.getX() - this.actualMousePoint.x),(evt.getY() - this.actualMousePoint.y));
               this.controlleur.updateSelectedItemsPositionsIrr(delta);
               this.actualMousePoint = controlleur.calculPointMagnetise(evt.getPoint());
                
               try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
               
               drawingPanel.repaint();
            }
        }
        else if (this.modeCourant==ModeApplication.SELECTIONSECTIONADGEN)
        {
            if (SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == false) { 
               
               delta.setLocation((evt.getX() - this.actualMousePoint.x),(evt.getY() - this.actualMousePoint.y));
               this.controlleur.updateSelectedItemsPositionsGen(delta);
               this.actualMousePoint = evt.getPoint();
               
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
               
               drawingPanel.repaint();
            }
            
            else if (SwingUtilities.isRightMouseButton(evt) && controlleur.gridStatus() == true) { 
               
               delta.setLocation((evt.getX() - this.actualMousePoint.x),(evt.getY() - this.actualMousePoint.y));
               this.controlleur.updateSelectedItemsPositionsGen(delta);
               this.actualMousePoint = controlleur.calculPointMagnetise(evt.getPoint());
               
                try 
                {
                      controlleur.memoriserPlan();
                } catch (Exception ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
               
               drawingPanel.repaint();
            }
        }
    }//GEN-LAST:event_drawingPanelMouseDragged

    private void jComboBoxAttributionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAttributionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAttributionActionPerformed

    private void jTextFieldPrixMaximumBilletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrixMaximumBilletActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrixMaximumBilletActionPerformed

    private void jButtonAccepterModifierSceneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccepterModifierSceneActionPerformed
       int longueur = Integer.parseInt(jTextFieldModfierSceneLongueur.getText());
      // int largeur = Integer.parseInt(jTextFieldModfierSceneLargeur.); 
      int largeur = Integer.parseInt(jTextFieldModfierSceneLargeur1.getText());
       
       this.controlleur.getPlan().modifierSceneDimension(longueur, largeur);
       jTextField11.setText(Integer.toString((this.controlleur.getPlan().getScene().getLongueur())));
       jTextField15.setText(Integer.toString((this.controlleur.getPlan().getScene().getLargeur())));
       
            try 
      {
            controlleur.memoriserPlan();
      } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
      }
       
       repaint();
       dialogueModifierScene.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAccepterModifierSceneActionPerformed

    private void jButtonAnnulerModifierSceneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerModifierSceneActionPerformed
        dialogueModifierScene.dispose();
    }//GEN-LAST:event_jButtonAnnulerModifierSceneActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dialogueModifierScene.pack();
        dialogueModifierScene.setLocationRelativeTo(this);
        dialogueModifierScene.setVisible (true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        dialogueModifSectionRect.pack();
        dialogueModifSectionRect.setLocationRelativeTo(this);
        //largeurEspVitalDefautModif.setText(espaceVitalParDefaut.get(1).toString());
        //longueurEspVitalDefautModif.setText(espaceVitalParDefaut.get(1).toString());
        dialogueModifSectionRect.setVisible (true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTextFieldNbRangeeModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNbRangeeModifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNbRangeeModifActionPerformed

    private void jTextFieldNbColonnesModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNbColonnesModifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNbColonnesModifActionPerformed

    private void jTextFieldAngleModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAngleModifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAngleModifActionPerformed

    private void jButtonAnnulerMofifSectionRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerMofifSectionRectActionPerformed
        dialogueModifSectionRect.dispose();
    }//GEN-LAST:event_jButtonAnnulerMofifSectionRectActionPerformed

    private void jButtonModfierSectionRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModfierSectionRectActionPerformed
        // TODO add your handling code here:
        
        
        this.elevationSection=Integer.parseInt(jTextFieldElevationModif.getText());
        this.anglesection=Integer.parseInt(jTextFieldAngleModif.getText());
        //this.largeurEspaceDefaut=espaceVitalParDefaut.get(1);
        //this.profondeurEspaceDefaut=espaceVitalParDefaut.get(0);
        this.largeurEspaceDefaut=Integer.parseInt(largeurEspVitalDefautModif.getText());
        this.profondeurEspaceDefaut=Integer.parseInt(longueurEspVitalDefautModif.getText());
        this.nbRangeSection=Integer.parseInt(jTextFieldNbRangeeModif.getText());
        this.nbColonnesSection=Integer.parseInt(jTextFieldNbColonnesModif.getText());
        this.nomSection=nomDeSectionModif.getText();
        System.out.println("test");
         
      //  else if(this.modeCourant==ModeApplication.EDITIONSECTION)
       // {
        for (SectionRectangulaire itemSection:this.controlleur.getPlan().getListSectionRect())
            {
                if(itemSection.isSelected())
                {
                     System.out.println("on modifie la section:"+itemSection.getNomSection());
                   this.controlleur.getPlan().ModifierSection(this.nomSection, this.elevationSection, this.anglesection, new EspaceVital(Conversion.deMetreEnPixel(this.largeurEspaceDefaut), Conversion.deMetreEnPixel(this.profondeurEspaceDefaut)),this.nbRangeSection ,this.nbColonnesSection , coinGaucheSection);
                   System.out.println("MODIF TERMINE :");
                   
                try 
                  {
                        controlleur.memoriserPlan();
                  } catch (Exception ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                  }
                   
                   drawingPanel.repaint();
                   this.setModeApplication(ModeApplication.SELECTION);
                                 
                }
                else{System.out.println("section non selectionne :");}
            }
         for (SectionRectangulaire itemSection:this.controlleur.getPlan().getListSectionRect())
            {
                if(itemSection.isSelected())
                {
                    
                  
                    jTextField11.setText(Integer.toString(itemSection.getNbRange()));
                    jTextField15.setText(Integer.toString(itemSection.getNbColonne()));
                    //jTextField11.setText(Integer.toString(itemSection.getNbColonne()));
                    //jTextField11.setText(Integer.toString(itemSection.getNbRange()));
                    jTextField13.setText(Integer.toString(itemSection.getAngleSection()));
                   // jTextField11.setText(Integer.toString(itemSection.getElevationSection()));
                    jTextField1.setText(Integer.toString(itemSection.getCoinGauche().x));
                    jTextField9.setText(Integer.toString(itemSection.getCoinGauche().y));
                System.out.println("MODIF TERMINE DE:"+itemSection.getNomSection());
                }
            }
       dialogueModifSectionRect.dispose();
    }//GEN-LAST:event_jButtonModfierSectionRectActionPerformed

    private void jTextFieldElevationModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldElevationModifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldElevationModifActionPerformed

    private void jTextFieldModfierSceneLongueurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModfierSceneLongueurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModfierSceneLongueurActionPerformed

    private void jTextFieldModfierSceneLargeur1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModfierSceneLargeur1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModfierSceneLargeur1ActionPerformed

    private void drawingPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseReleased
      if(dessiner2){
        //start = mainWindow.p_point;
        p_end = evt.getPoint();
        this.controlleur.ajouterUneScene(p_point, p_end);
        int espacelong=Conversion.dePixelEnMetre(this.controlleur.getPlan().getScene().getLargeur());
        int espacelarg=Conversion.dePixelEnMetre(this.controlleur.getPlan().getScene().getLongueur());
        jTextField11.setText(Integer.toString((espacelong)));
        jTextField15.setText(Integer.toString((espacelarg)));
        
                try 
         {
               controlleur.memoriserPlan();
         } catch (Exception ex) {
               Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        repaint();
        } 
        dessiner2=false;     // TODO add your handling code here:
    }//GEN-LAST:event_drawingPanelMouseReleased

    private void jTextFieldAngleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAngleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAngleActionPerformed

    private void buttonTopPanelModifierSceneActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonTopPanelModifierSceneActionPerformed
    {//GEN-HEADEREND:event_buttonTopPanelModifierSceneActionPerformed
       setModeApplication(ModeApplication.EDITIONSCENE);
       //this.controlleur.getPlan().modifierDimensionSceneSouris(p_point, p_end);
        this.controlleur.getPlan().modifierDimensionSceneSouris(p_point,p_supDroit, p_end,p_infGauche);
 
        try 
      {
            controlleur.memoriserPlan();
      } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
      }
        
        drawingPanel.repaint();      // TODO add your handling code here:
    }//GEN-LAST:event_buttonTopPanelModifierSceneActionPerformed

    private void jComboBoxSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSelectionActionPerformed
        
        if(jComboBoxSelection.getSelectedItem() == "Select. Scène")
        {
            setModeApplication(ModeApplication.SELECTIONSCENE);
        }
        else if(jComboBoxSelection.getSelectedItem() == "Sélect. Section rectangulaire")
        {
            setModeApplication(ModeApplication.SELECTIONSECTION);
        }
        else if(jComboBoxSelection.getSelectedItem() == "Sélect. Section irrégulière")
        {
            setModeApplication(ModeApplication.SELECTIONSECTIONIRR);
        }
        else if(jComboBoxSelection.getSelectedItem() == "Sélect. Section admission générale")
        {
            setModeApplication(ModeApplication.SELECTIONSECTIONADGEN);
        }
        else if(jComboBoxSelection.getSelectedItem() == "Sélect. Rangé")
        {
            setModeApplication(ModeApplication.SELECTIONRANGE);
        }        
        else if(jComboBoxSelection.getSelectedItem() == "Sélect. Siège")
        {
            setModeApplication(ModeApplication.SELECTIONSIEGE);
        }
        
        else if(jComboBoxSelection.getSelectedItem() == "Sélect. Point")
        {
            setModeApplication(ModeApplication.SELECTIONPOINT);
        }
        

        
    }//GEN-LAST:event_jComboBoxSelectionActionPerformed

    private void buttonTopPanelSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelSupprimerActionPerformed
            setModeApplication(ModeApplication.SUPPRIMER);
    }//GEN-LAST:event_buttonTopPanelSupprimerActionPerformed

    private void jButton1SiegeManuelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1SiegeManuelActionPerformed
        // TODO add your handling code here:
         this.setModeApplication(ModeApplication.AJOUTERSIEGE);
    }//GEN-LAST:event_jButton1SiegeManuelActionPerformed

    private void annulerAjoutOffreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerAjoutOffreActionPerformed
        // TODO add your handling code here:
        dialogueAjouterOffre.dispose();
    }//GEN-LAST:event_annulerAjoutOffreActionPerformed

    private void accepterAjoutOffreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accepterAjoutOffreMouseClicked
        // TODO add your handling code here:
        OffreAfficherPanel monOffre = new OffreAfficherPanel();
        double pourcentage = Double.parseDouble(pourcentageAjoutOffre.getText());
        String description = descriptionAjoutOffre.getText();

        this.controlleur.creerOffre(pourcentage, description);

        for(Offre offre : this.controlleur.getListOffre()){
            monOffre.setDescription(description);
            monOffre.setPourcentageOffre(pourcentage);

            monOffre.addMouseListener(new java.awt.event.MouseAdapter()
                {

                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt)
                    {
                        if(monOffre.getIsSelected() == false)

                        {
                            boolean isSelected = true;

                            monOffre.setBackgroundOffreSelected();
                            controlleur.assignerOffreElementSelectionne(monOffre.getPourcentageOffre(), monOffre.getDescription());
                            
                        try 
                         {
                               controlleur.memoriserPlan();
                         } catch (Exception ex) {
                               Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                         }
                            
                            drawingPanel.repaint();
                        }

                    }

                });

                jPanelOffre.add(monOffre);

                jPanelOffre.setPreferredSize(new Dimension(0, jPanel1.getPreferredSize().height + 50));
                jPanelOffre.revalidate();
                jScrollPaneOffre.revalidate();
            }

            listeOffre.addComponentListe(monOffre);
            creerOffre.revalidate();

            dialogueAjouterOffre.dispose();
            descriptionAjoutOffre.setText("");
            pourcentageAjoutOffre.setText("");

    }//GEN-LAST:event_accepterAjoutOffreMouseClicked

    private void creerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerButtonActionPerformed
        // TODO add your handling code here:
        dialogueAjouterOffre.pack();
        dialogueAjouterOffre.setLocationRelativeTo(this);
        dialogueAjouterOffre.setVisible (true);
    }//GEN-LAST:event_creerButtonActionPerformed

    private void fichierSousMenuExporterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierSousMenuExporterActionPerformed
     try {
            this.controlleur.exporterImage();
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }    

// TODO add your handling code here:
    }//GEN-LAST:event_fichierSousMenuExporterActionPerformed

    private void drawingPanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseMoved
        // TODO add your handling code here:
        for(SectionRectangulaire section : this.controlleur.getPlan().getListSectionRect()) 
        {

            if(section.contains(evt.getX(), evt.getY()))
            {
                
                for (Range itemRange : section.getListRangeSection()) 
                {
                    if(itemRange.contains(evt.getPoint().x, evt.getPoint().y))
                      {
                        
                        for (Siege itemSiege : itemRange.getListSiegeRange()) 
                        {

                            if(itemSiege.contains(evt.getPoint().x, evt.getPoint().y))
                             {
                                   
                                    int numeroSiege = itemSiege.getNumeroSiege();
                                    String nomsSection = section.getNomSection();
                                    double prixSiege = itemSiege.getPrixSiege().getPrix();
                                    int sonElevation = section.getElevationSection();
                                    int numeroRangee = itemRange.getNumeroRange();
                                    int myOfferDescription = itemSiege.getOffreFromList().size();
                                    List<Offre> maListe = itemSiege.getOffreFromList();
                                    
                                    
                                   // String nombre = String.valueOf(myOfferDescription);
                                   // drawingPanel.setToolTipText("Siege No "+String.valueOf(numeroSiege)+" avec pour nom "+nomsSection+" et pour prix "
                                           // +String.valueOf(prixSiege)+" avec elevation No "+String.valueOf(sonElevation)+" "+" et le numero de range "+ String.valueOf(numeroRangee)+" et le nombre d'offres sur ce siege est de "
                                           //+ String.valueOf(myOfferDescription));
                                    affNumSiege.setText(String.valueOf(numeroSiege));
                                    affNomSection.setText(nomsSection);
                                    affPrixAss.setText(String.valueOf(prixSiege));
                                    affElevation.setText(String.valueOf(sonElevation));
                                    //affNomOffre.setText(String.valueOf(myOfferDescription));
                                    String monOffre = "";
                                    String pasOffre = "Pas d'offres";
                                    StringBuilder mesOffres = new StringBuilder();
                                    for(int i = 0; i < myOfferDescription; i++){
                                        String descr = maListe.get(i).getDescriptionOffre();
                                        double rabais = maListe.get(i).getPourcentageOffre();
                                        monOffre = descr + " " + String.valueOf(rabais)+"%"+"\n";
                                        mesOffres.append(descr);
                                        affNumRangee.setText(mesOffres.toString());
                                    }
                                   
                                    affNumRangee.setText(monOffre);
                                    afficherInfoSiege.pack();
                                    //afficherInfoSiege.setLocationRelativeTo(mainPanel);
                                    afficherInfoSiege.setVisible(true);
                                    
                                    
                             }
                        }
                      }
                }
            }
        }
        
           for(SectionIrreguliere sectionIrr : this.controlleur.getPlan().getListSectionIrrPlan()) 
        {

            if(sectionIrr.contains(evt.getX(), evt.getY()))
            {
                
                for (Range itemRange : sectionIrr.getListRangeSection()) 
                {
                    if(itemRange.contains(evt.getPoint().x, evt.getPoint().y))
                      {
                        
                        for (Siege itemSiege : itemRange.getListSiegeRange()) 
                        {

                            if(itemSiege.contains(evt.getPoint().x, evt.getPoint().y))
                             {
                                   
                                    int numeroSiege = itemSiege.getNumeroSiege();
                                    String nomsSection = sectionIrr.getNomSection();
                                    double prixSiege = itemSiege.getPrixSiege().getPrix();
                                    int sonElevation = sectionIrr.getElevationSection();
                                    int numeroRangee = itemRange.getNumeroRange();
                                    int myOfferDescription = itemSiege.getOffreFromList().size();
                                    List<Offre> maListe = itemSiege.getOffreFromList();
                                    
                                    
                                   // String nombre = String.valueOf(myOfferDescription);
                                   // drawingPanel.setToolTipText("Siege No "+String.valueOf(numeroSiege)+" avec pour nom "+nomsSection+" et pour prix "
                                           // +String.valueOf(prixSiege)+" avec elevation No "+String.valueOf(sonElevation)+" "+" et le numero de range "+ String.valueOf(numeroRangee)+" et le nombre d'offres sur ce siege est de "
                                           //+ String.valueOf(myOfferDescription));
                                    affNumSiege.setText(String.valueOf(numeroSiege));
                                    affNomSection.setText(nomsSection);
                                    affPrixAss.setText(String.valueOf(prixSiege));
                                    affElevation.setText(String.valueOf(sonElevation));
                                    //affNomOffre.setText(String.valueOf(myOfferDescription));
                                    String monOffre = "";
                                    String pasOffre = "Pas d'offres";
                                    for(int i = 0; i < myOfferDescription; i++){
                                        String descr = maListe.get(i).getDescriptionOffre();
                                        double rabais = maListe.get(i).getPourcentageOffre();
                                       
                                        monOffre = descr + " " + String.valueOf(rabais)+"%"+"\n";
                                        //String offre = monOffre.concat(descr);
                                        StringBuilder mesOffres = new StringBuilder();
                                        
                                        String mesOffre =mesOffres.append(descr)
                                                 .append(mesOffres)
                                                  .toString();
                                        
                                        affNumRangee.setText(mesOffre);
                                    }
                                   
                                    affNumRangee.setText(monOffre);
                                    afficherInfoSiege.pack();
                                    //afficherInfoSiege.setLocationRelativeTo(mainPanel);
                                    afficherInfoSiege.setVisible(true);
                                    
                                    
                             }
                        }
                      }
                }
            }
        }
    }//GEN-LAST:event_drawingPanelMouseMoved

    private void buttonTopPanelRotationSceneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTopPanelRotationSceneActionPerformed
         if (this.modeCourant==ModeApplication.SELECTIONSCENE){ 
          this.angleScene =Integer.parseInt(jTextField13.getText()); 
           this.controlleur.roterScene(this.angleScene);
           
                    try 
          {
                controlleur.memoriserPlan();
          } catch (Exception ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
          }
           
           drawingPanel.repaint();
          
      }else if(this.modeCourant==ModeApplication.SELECTIONSECTION){
          this.anglesection =Integer.parseInt(jTextField13.getText());
          this.controlleur.roterSectionRect(this.anglesection);
           //System.out.println("angle mainwindow"+this.anglesection);
           drawingPanel.repaint();
      }
       
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTopPanelRotationSceneActionPerformed

    private void affPrixAssActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_affPrixAssActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_affPrixAssActionPerformed

    private void drawingPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseClicked
        // TODO add your handling code here:
         for(SectionRectangulaire section : this.controlleur.getPlan().getListSectionRect()) 
        {

            if(section.contains(evt.getX(), evt.getY()))
            {
                
                for (Range itemRange : section.getListRangeSection()) 
                {
                    if(itemRange.contains(evt.getPoint().x, evt.getPoint().y))
                      {
                        
                        for (Siege itemSiege : itemRange.getListSiegeRange()) 
                        {

                            if(itemSiege.contains(evt.getPoint().x, evt.getPoint().y))
                             {
                                   
                                    int numeroSiege = itemSiege.getNumeroSiege();
                                    String nomsSection = section.getNomSection();
                                    double prixSiege = itemSiege.getPrixSiege().getPrix();
                                    int sonElevation = section.getElevationSection();
                                    int numeroRangee = itemRange.getNumeroRange();
                                    int myOfferDescription = itemSiege.getOffreFromList().size();
                                    List<Offre> maListe = itemSiege.getOffreFromList();
                                    if(maListe.isEmpty()){
                                        System.out.println("Cette liste est vide");
                                    } else {
                                       System.out.println("Cette liste a une offre inside" + maListe.get(0).getDescriptionOffre());
                                       for(int nomb = 0; nomb < maListe.size(); nomb++){
                                           if(evt.getClickCount()==2){
                                                maListe.remove(nomb);
                                           }
                                       }
                                      
                                    }
                             }
                        }
                      }
                }
            }
        }
         
          for(SectionIrreguliere sectionIrr : this.controlleur.getPlan().getListSectionIrrPlan()) 
        {

            if(sectionIrr.contains(evt.getX(), evt.getY()))
            {

                for (Range itemRange : sectionIrr.getListRangeSection()) 
                {
                    if(itemRange.contains(evt.getPoint().x, evt.getPoint().y))
                      {

                        for (Siege itemSiege : itemRange.getListSiegeRange()) 
                        {

                            if(itemSiege.contains(evt.getPoint().x, evt.getPoint().y))
                             {

                                    int numeroSiege = itemSiege.getNumeroSiege();
                                    String nomsSection = sectionIrr.getNomSection();
                                    double prixSiege = itemSiege.getPrixSiege().getPrix();
                                    int sonElevation = sectionIrr.getElevationSection();
                                    int numeroRangee = itemRange.getNumeroRange();
                                    int myOfferDescription = itemSiege.getOffreFromList().size();
                                    List<Offre> maListe = itemSiege.getOffreFromList();

                                    if(maListe.isEmpty()){
                                        System.out.println("Cette liste est vide");
                                    } else {
                                       System.out.println("Cette liste a une offre inside" + maListe.get(0).getDescriptionOffre());
                                       for(int nomb = 0; nomb < maListe.size(); nomb++){
                                           if(evt.getClickCount()==2){
                                                maListe.remove(nomb);
                                           }
                                       }

                                    }

                             }
                        }
                      }
                }
            }
        }
    }//GEN-LAST:event_drawingPanelMouseClicked

    private void jButtonSectionGeneraleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSectionGeneraleActionPerformed
        // TODO add your handling code here:
         this.setModeApplication(ModeApplication.AJOUTERSECTIONGEN);
        diaglogueAjoutSectionRect.setTitle("Ajouter Section Admission Generale");
        diaglogueAjoutSectionRect.pack();
        diaglogueAjoutSectionRect.setLocationRelativeTo(this);
        largeurEspVitalDefaut.setText(espaceVitalParDefaut.get(1).toString());
        longueurEspVitalDefaut.setText(espaceVitalParDefaut.get(0).toString());
        jTextFieldNbColonnes.setEnabled(false);
        jTextFieldNbRangee.setEnabled(false);
        
        diaglogueAjoutSectionRect.setVisible (true);
        
        nbClic=0;
        poly=new Polygon();

    }//GEN-LAST:event_jButtonSectionGeneraleActionPerformed

    private void drawingPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_drawingPanelMouseEntered

    private void jScrollPaneOffreMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneOffreMouseMoved
       
    }//GEN-LAST:event_jScrollPaneOffreMouseMoved

     private Evenement monInfoEvents;
     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accepterAjoutOffre;
    private javax.swing.JTextField affElevation;
    private javax.swing.JTextField affNomSection;
    private javax.swing.JTextArea affNumRangee;
    private javax.swing.JTextField affNumSiege;
    private javax.swing.JTextField affPrixAss;
    private javax.swing.JLabel aff_infoSiege;
    private javax.swing.JDialog afficherInfoSiege;
    private javax.swing.JButton annulerAjoutOffre;
    private javax.swing.JButton annulerCreerPlanSalle;
    private javax.swing.JButton annulerModifierButton;
    private javax.swing.ButtonGroup buttonGroupTopMenu;
    private javax.swing.JPanel buttonTopPanel;
    private javax.swing.JButton buttonTopPanelAnnuler;
    private javax.swing.JToggleButton buttonTopPanelDeplacer;
    private javax.swing.JToggleButton buttonTopPanelDessiner;
    private javax.swing.JToggleButton buttonTopPanelDessinerReg;
    private javax.swing.JToggleButton buttonTopPanelDessinerScene;
    private javax.swing.JToggleButton buttonTopPanelModifierScene;
    private javax.swing.JButton buttonTopPanelOpen;
    private javax.swing.JButton buttonTopPanelRepeter;
    private javax.swing.JToggleButton buttonTopPanelRotationScene;
    private javax.swing.JButton buttonTopPanelSave;
    private javax.swing.JToggleButton buttonTopPanelSupprimer;
    private javax.swing.JToggleButton buttonTopPanelZoomIn;
    private javax.swing.JToggleButton buttonTopPanelZoomOut;
    private javax.swing.JTextField capaciteEvent;
    private javax.swing.JTextField capaciteEventInfo;
    private javax.swing.JCheckBox checkBoxActiverGrille;
    private javax.swing.JButton confirmerModifierButton;
    private javax.swing.JButton creerButton;
    private javax.swing.JPanel creerOffre;
    private javax.swing.JButton creerPlanSalleButton;
    private javax.swing.JTextField dateEvent;
    private javax.swing.JTextField dateEventInfo;
    private javax.swing.JTextField descriptionAjoutOffre;
    private javax.swing.JDialog diaglogueAjoutSectionRect;
    private javax.swing.JDialog dialogueAjouterOffre;
    private javax.swing.JDialog dialogueAjouterPrix;
    private javax.swing.JDialog dialogueCalculerPrixAuto;
    private javax.swing.JDialog dialogueCreationPlanSalle;
    private javax.swing.JDialog dialogueInfoEvenement;
    private javax.swing.JDialog dialogueInfoOffreSiege;
    private javax.swing.JDialog dialogueModifSectionRect;
    private javax.swing.JDialog dialogueModifierPlanDeSalle;
    private javax.swing.JDialog dialogueModifierScene;
    private javax.swing.JCheckBox distAutoSieges;
    private javax.swing.JCheckBox distAutoSiegesModif;
    private javax.swing.JPanel drawingPanel;
    private javax.swing.JMenu editionMenu;
    private javax.swing.JMenuItem editionMenuAnnuler;
    private javax.swing.JMenuItem editionMenuColler;
    private javax.swing.JMenuItem editionMenuCopier;
    private javax.swing.JMenuItem editionMenuCouper;
    private javax.swing.JMenuItem editionMenuRepeter;
    private javax.swing.JButton fermerEventButton;
    private javax.swing.JMenu fichierMenu;
    private javax.swing.JMenuItem fichierSousMenuExporter;
    private javax.swing.JMenuItem fichierSousMenuNouveau;
    private javax.swing.JMenuItem fichierSousMenuOuvrir;
    private javax.swing.JMenuItem fichierSousMenuQuitter;
    private javax.swing.JMenuItem fichierSousMenuSauvegarder;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1SiegeManuel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonAcceptCreationPrix;
    private javax.swing.JButton jButtonAccepterModifierScene;
    private javax.swing.JButton jButtonAccepterPrixAuto;
    private javax.swing.JButton jButtonAjoutPrix;
    private javax.swing.JButton jButtonAnnulerCreerPrix;
    private javax.swing.JButton jButtonAnnulerModifierScene;
    private javax.swing.JButton jButtonAnnulerMofifSectionRect;
    private javax.swing.JButton jButtonAnnulerPrixAuto;
    private javax.swing.JButton jButtonAppliquerCreationPrixAuto;
    private javax.swing.JButton jButtonCreerPrixAuto;
    private javax.swing.JButton jButtonModfierSectionRect;
    private javax.swing.JButton jButtonSectionGenerale;
    private javax.swing.JButton jButtonSupprimerPrix;
    private javax.swing.JComboBox<String> jComboBoxAttribution;
    private javax.swing.JComboBox<String> jComboBoxSelection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelLongueurModifierScene;
    private javax.swing.JLabel jLabelRevenueTotal;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelAnnulerAccepter;
    private javax.swing.JPanel jPanelColorChoose;
    private javax.swing.JPanel jPanelOffre;
    private javax.swing.JPanel jPanelPrix;
    private javax.swing.JPanel jPanelSelectionPrixAuto;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneOffre;
    private javax.swing.JScrollPane jScrollPanePrix;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextFieldAngle;
    private javax.swing.JTextField jTextFieldAngleModif;
    private javax.swing.JTextField jTextFieldElevation;
    private javax.swing.JTextField jTextFieldElevationModif;
    private javax.swing.JTextField jTextFieldModfierSceneLargeur1;
    private javax.swing.JTextField jTextFieldModfierSceneLongueur;
    private javax.swing.JTextField jTextFieldNbColonnes;
    private javax.swing.JTextField jTextFieldNbColonnesModif;
    private javax.swing.JTextField jTextFieldNbRangee;
    private javax.swing.JTextField jTextFieldNbRangeeModif;
    private javax.swing.JTextField jTextFieldPrixBillet;
    private javax.swing.JTextField jTextFieldPrixMaximumBillet;
    private javax.swing.JTextField jTextFieldPrixMinimumBillet;
    private javax.swing.JFormattedTextField largeurEspVitalDefaut;
    private javax.swing.JFormattedTextField largeurEspVitalDefautModif;
    private javax.swing.JTextField largeurEspVitalFormatted;
    private javax.swing.JFormattedTextField largeurEspaceVital;
    private javax.swing.JFormattedTextField largeurFormatted;
    private javax.swing.JFormattedTextField largeurNewPlanDeSalle;
    private javax.swing.JTextField lieuEvent;
    private javax.swing.JTextField lieuEventInfo;
    private javax.swing.JFormattedTextField longueurEspVitalDefaut;
    private javax.swing.JFormattedTextField longueurEspVitalDefautModif;
    private javax.swing.JTextField longueurEspVitalFormatted;
    private javax.swing.JFormattedTextField longueurEspaceVital;
    private javax.swing.JFormattedTextField longueurFormated;
    private javax.swing.JFormattedTextField longueurNewPlanDeSalle;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPalettePosition;
    private javax.swing.JTextField nomDeSection;
    private javax.swing.JTextField nomDeSectionModif;
    private javax.swing.JLabel nomEvenement;
    private javax.swing.JTextField nomEvent;
    private javax.swing.JTextField nomEventInfo;
    private javax.swing.JPanel planDeSalle;
    private javax.swing.JTextField pourcentageAjoutOffre;
    private javax.swing.JMenu presentationMenu;
    private javax.swing.JMenuItem presentationSousMenuInfo;
    private javax.swing.JMenuItem presentationSousMenuOffre;
    private javax.swing.JMenuItem presentationSousMenuPosition;
    private javax.swing.JMenuItem presentationSousMenuPrix;
    private javax.swing.JMenuItem presentationSousMenuSection;
    private javax.swing.JTextField siegeDescOffre;
    private javax.swing.JTextField siegePourOffre;
    private javax.swing.JTextField siegeQuanOffre;
    private javax.swing.JLabel titreModif;
    private javax.swing.JLabel titreNouvInfo;
    private javax.swing.JMenuBar topMenuBar;
    // End of variables declaration//GEN-END:variables
}
